{
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "\n",
        "title": "Routing API reference"
    },
    "paths": {
        "/routing/v1/{Instance}/health": {
            "get": {
                "tags": [
                    "routing/v1"
                ],
                "operationId": "GetHealthZ",
                "parameters": [
                    {
                        "type": "string",
                        "name": "Instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/routingHealth"
                        }
                    }
                }
            }
        },
        "/routing/v1/{Instance}/neighbors": {
            "get": {
                "tags": [
                    "routing/v1"
                ],
                "operationId": "GetListNeighbors",
                "parameters": [
                    {
                        "type": "string",
                        "name": "Instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kind represents the type of the API object.",
                        "name": "T.kind",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "APIVersion defines the version of the API object. This can only be set by the server.",
                        "name": "T.api-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Name of the object, unique within a Namespace for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "meta.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on the tenant the user, who created the object, belongs to. Must be alpha-numerics. Length of string should be between 1 and 48.",
                        "name": "meta.tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "meta.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "meta.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "meta.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "meta.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "meta.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "neighbor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/routingNeighborList"
                        }
                    }
                }
            }
        },
        "/routing/v1/{Instance}/routes": {
            "get": {
                "tags": [
                    "routing/v1"
                ],
                "operationId": "GetListRoutes_1",
                "parameters": [
                    {
                        "type": "string",
                        "name": "Instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kind represents the type of the API object.",
                        "name": "T.kind",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "APIVersion defines the version of the API object. This can only be set by the server.",
                        "name": "T.api-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Name of the object, unique within a Namespace for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "meta.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on the tenant the user, who created the object, belongs to. Must be alpha-numerics. Length of string should be between 1 and 48.",
                        "name": "meta.tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "meta.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "meta.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "meta.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "meta.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "meta.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "ipaddress",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "extcomm",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "vnid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "rtype",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "nhop",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "page-number",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "Fetch all routes rather than just the best routes selected by BGP.",
                        "name": "all-routes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/routingRouteList"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "routing/v1"
                ],
                "operationId": "PostListRoutes",
                "parameters": [
                    {
                        "type": "string",
                        "name": "Instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routingRouteFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/routingRouteList"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "EVPNRouteEVPNType2Route": {
            "type": "object",
            "properties": {
                "esi": {
                    "type": "string"
                },
                "eth-tag": {
                    "type": "string"
                },
                "ip-addr": {
                    "type": "string"
                },
                "mac": {
                    "type": "string"
                },
                "mpls-label1": {
                    "type": "string"
                },
                "mpls-label2": {
                    "type": "string"
                },
                "rd": {
                    "type": "string"
                }
            }
        },
        "EVPNRouteEVPNType5Route": {
            "type": "object",
            "properties": {
                "esi": {
                    "type": "string"
                },
                "eth-tag": {
                    "type": "string"
                },
                "gw-ip-addr": {
                    "type": "string"
                },
                "ip-prefix": {
                    "type": "string"
                },
                "mpls-label1": {
                    "type": "string"
                },
                "rd": {
                    "type": "string"
                }
            }
        },
        "HealthStatusPeeringStatus": {
            "type": "object",
            "properties": {
                "configured": {
                    "type": "integer",
                    "format": "int32"
                },
                "down-peers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "established": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "apiAggWatchOptions": {
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/apiObjectMeta"
                },
                "watch-options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apiKindWatchOptions"
                    }
                }
            }
        },
        "apiBgpAsn": {
            "type": "object",
            "properties": {
                "ASNumber": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "apiKindWatchOptions": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "options": {
                    "$ref": "#/definitions/apiListWatchOptions"
                }
            }
        },
        "apiListMeta": {
            "description": "ListMeta contains the metadata for list of objects.",
            "type": "object",
            "properties": {
                "resource-version": {
                    "description": "Resource version of object store at the time of list generation.",
                    "type": "string"
                },
                "total-count": {
                    "description": "TotalCount is the total count of results (non paginated) that the server holds.",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "apiListWatchOptions": {
            "type": "object",
            "required": [
                "sort-order"
            ],
            "properties": {
                "creation-time": {
                    "type": "string",
                    "format": "date-time"
                },
                "field-change-selector": {
                    "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "field-selector": {
                    "description": "FieldSelector to select on field values in list or watch results.",
                    "type": "string"
                },
                "from": {
                    "description": "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
                    "type": "integer",
                    "format": "int32"
                },
                "generation-id": {
                    "type": "string"
                },
                "label-selector": {
                    "description": "LabelSelector to select on labels in list or watch results.",
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "max-results": {
                    "description": "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
                    "type": "integer",
                    "format": "int32"
                },
                "meta-only": {
                    "description": "If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.",
                    "type": "boolean",
                    "format": "boolean",
                    "default": "false"
                },
                "mod-time": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "description": "Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 2,
                    "pattern": "^[a-zA-Z0-9][\\w\\-\\.]*[a-zA-Z0-9]$"
                },
                "namespace": {
                    "description": "Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 2,
                    "pattern": "^[a-zA-Z0-9][\\w\\-\\.]*[a-zA-Z0-9]$"
                },
                "resource-version": {
                    "type": "string"
                },
                "self-link": {
                    "type": "string"
                },
                "sort-order": {
                    "description": "order to sort List results in.",
                    "type": "string",
                    "default": "none",
                    "enum": [
                        "none",
                        "by-name",
                        "by-name-reverse",
                        "by-version",
                        "by-version-reverse",
                        "by-creation-time",
                        "by-creation-time-reverse",
                        "by-mod-time",
                        "by-mod-time-reverse"
                    ],
                    "x-ui-hints": {
                        "by-creation-time": "By Creation Time",
                        "by-creation-time-reverse": "By Creation Time Reverse",
                        "by-mod-time": "By Modification Time",
                        "by-mod-time-reverse": "By Modification Time Reverse",
                        "by-name": "By Name",
                        "by-name-reverse": "By Name Reverse",
                        "by-version": "By Version",
                        "by-version-reverse": "By Version Reverse",
                        "none": "None"
                    }
                },
                "tenant": {
                    "description": "Must be alpha-numerics. Length of string should be between 1 and 48.",
                    "type": "string",
                    "maxLength": 48,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z0-9]+$"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "apiObjectMeta": {
            "description": "ObjectMeta contains metadata that all objects stored in kvstore must have.",
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "creation-time": {
                    "description": "System generated and updated, not updatable by user.",
                    "type": "string",
                    "format": "date-time",
                    "title": "CreationTime is the creation time of the object"
                },
                "generation-id": {
                    "description": "This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                    "type": "string",
                    "title": "GenerationID is the generation Id for the object"
                },
                "labels": {
                    "type": "object",
                    "title": "Labels are arbitrary (key,value) pairs associated with any object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "mod-time": {
                    "description": "System generated and updated, not updatable by user.",
                    "type": "string",
                    "format": "date-time",
                    "title": "ModTime is the Last Modification time of the object"
                },
                "name": {
                    "description": "Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                    "type": "string",
                    "title": "Name of the object, unique within a Namespace for scoped objects",
                    "maxLength": 64,
                    "minLength": 2,
                    "pattern": "^[a-zA-Z0-9][\\w\\-\\.]*[a-zA-Z0-9]$"
                },
                "namespace": {
                    "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 2,
                    "pattern": "^[a-zA-Z0-9][\\w\\-\\.]*[a-zA-Z0-9]$"
                },
                "resource-version": {
                    "description": "This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                    "type": "string",
                    "title": "Resource version in the object store"
                },
                "self-link": {
                    "description": "When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                    "type": "string",
                    "title": "SelfLink is a link for accessing this object"
                },
                "tenant": {
                    "description": "This can be automatically filled in many cases based on the tenant the user, who created the object, belongs to. Must be alpha-numerics. Length of string should be between 1 and 48.",
                    "type": "string",
                    "title": "Tenant to which the object belongs to",
                    "maxLength": 48,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z0-9]+$"
                },
                "uuid": {
                    "description": "This is generated on creation of the object. System generated, not updatable by user.",
                    "type": "string",
                    "title": "UUID is the unique identifier for the object"
                }
            }
        },
        "apiObjectRef": {
            "description": "ObjectRef contains identifying information about an object.",
            "type": "object",
            "properties": {
                "kind": {
                    "description": "Kind represents the type of the API object.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the object, unique within a Namespace for scoped objects.",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace of the object, for scoped objects.",
                    "type": "string"
                },
                "tenant": {
                    "description": "Tenant of the object.",
                    "type": "string"
                },
                "uri": {
                    "description": "URI is a link to accessing the referenced object.",
                    "type": "string"
                }
            }
        },
        "apiStatus": {
            "description": "Status is returned for calls that dont return objects.",
            "type": "object",
            "properties": {
                "api-version": {
                    "type": "string"
                },
                "code": {
                    "description": "Code is the HTTP status code.",
                    "type": "integer",
                    "format": "int32"
                },
                "kind": {
                    "type": "string"
                },
                "message": {
                    "description": "Message contains human readable form of the error.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "object-ref": {
                    "description": "Reference to the object (optional) for which this status is being sent.",
                    "$ref": "#/definitions/apiObjectRef"
                },
                "result": {
                    "description": "Result contains the status of the operation, success or failure.",
                    "$ref": "#/definitions/apiStatusResult"
                }
            }
        },
        "apiStatusResult": {
            "description": "StatusResult contains possible statuses for a NIC.",
            "type": "object",
            "properties": {
                "Str": {
                    "type": "string"
                }
            }
        },
        "apiTimestamp": {
            "type": "object",
            "properties": {
                "nanos": {
                    "type": "integer",
                    "format": "int32"
                },
                "seconds": {
                    "type": "string",
                    "format": "int64"
                }
            }
        },
        "apiTypeMeta": {
            "description": "TypeMeta contains the metadata about kind and version for all API objects.",
            "type": "object",
            "properties": {
                "api-version": {
                    "description": "APIVersion defines the version of the API object. This can only be set by the server.",
                    "type": "string"
                },
                "kind": {
                    "description": "Kind represents the type of the API object.",
                    "type": "string"
                }
            }
        },
        "apiWatchControl": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int64"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "apiWatchEvent": {
            "type": "object",
            "properties": {
                "control": {
                    "$ref": "#/definitions/apiWatchControl"
                },
                "object": {
                    "$ref": "#/definitions/googleprotobufAny"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "apiWatchEventList": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apiWatchEvent"
                    }
                }
            }
        },
        "googleprotobufAny": {
            "description": "`Any` contains an arbitrary serialized protocol buffer message along with a URL that describes the type of the serialized message. Protobuf library provides support to pack/unpack Any values in the form of utility functions or additional generated methods of the Any type. Example 1: Pack and unpack a message in C++. Foo foo = ...; Any any; any.PackFrom(foo); ... if (any.UnpackTo(&foo)) { ... } Example 2: Pack and unpack a message in Java. Foo foo = ...; Any any = Any.pack(foo); ... if (any.is(Foo.class)) { foo = any.unpack(Foo.class); } Example 3: Pack and unpack a message in Python. foo = Foo(...) any = Any() any.Pack(foo) ... if any.Is(Foo.DESCRIPTOR): any.Unpack(foo) ... Example 4: Pack and unpack a message in Go foo := &pb.Foo{...} any, err := ptypes.MarshalAny(foo) ... foo := &pb.Foo{} if err := ptypes.UnmarshalAny(any, foo); err != nil { ... } The pack methods provided by protobuf library will by default use 'type.googleapis.com/full.type.name' as the type URL and the unpack methods only use the fully qualified type name after the last '/' in the type URL, for example \"foo.bar.com/x/y.z\" will yield type name \"y.z\". JSON ==== The JSON representation of an `Any` value uses the regular representation of the deserialized, embedded message, with an additional field `@type` which contains the type URL. Example: package google.profile; message Person { string first_name = 1; string last_name = 2; } { \"@type\": \"type.googleapis.com/google.profile.Person\", \"firstName\": <string>, \"lastName\": <string> } If the embedded message type is well-known and has a custom JSON representation, that representation will be embedded adding a field `value` which holds the custom JSON in addition to the `@type` field. Example (for message [google.protobuf.Duration][]): { \"@type\": \"type.googleapis.com/google.protobuf.Duration\", \"value\": \"1.212s\" }.",
            "type": "object",
            "properties": {
                "type_url": {
                    "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][] value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the URL, or have them precompiled into a binary to avoid any lookup. Therefore, binary compatibility needs to be preserved on changes to types. (Use versioned type names to manage breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.",
                    "type": "string"
                },
                "value": {
                    "description": "Must be a valid serialized protocol buffer of the above specified type.",
                    "type": "string",
                    "format": "byte"
                }
            }
        },
        "networkBGPNeighbor": {
            "type": "object",
            "required": [
                "multi-hop",
                "enable-address-families",
                "keepalive-interval",
                "holdtime",
                "allow-as-in"
            ],
            "properties": {
                "allow-as-in": {
                    "description": "AllowASIn allows local ASN to be in received routes. The value indicates how many instances are allowed. 0 disables the feature. Value should be between 0 and 255.",
                    "type": "integer",
                    "format": "int64",
                    "maximum": 255,
                    "minimum": 0
                },
                "dsc-auto-config": {
                    "description": "DSCAutoConfig sets the flag that this neighbor config is to be used as a template for auto configuration.",
                    "type": "boolean",
                    "format": "boolean"
                },
                "enable-address-families": {
                    "description": "Address families to enable on the neighbor.",
                    "type": "array",
                    "default": "ipv4-unicast",
                    "enum": [
                        "ipv4-unicast",
                        "l2vpn-evpn"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "holdtime": {
                    "description": "Holdtime is time for which not receiving a keepalive message results in declaring the peer as dead. Value should be between 0 and 3600.",
                    "type": "integer",
                    "format": "int64",
                    "maximum": 3600,
                    "minimum": 0
                },
                "ip-address": {
                    "description": "Neighbor IP Address. Should be a valid v4 or v6 IP address.",
                    "type": "string",
                    "example": "10.1.1.1, ff02::5 "
                },
                "keepalive-interval": {
                    "description": "KeepaliveInterval is time interval at which keepalive messages are sent. Value should be between 0 and 3600.",
                    "type": "integer",
                    "format": "int64",
                    "maximum": 3600,
                    "minimum": 0
                },
                "multi-hop": {
                    "description": "BGP Multihop configuration. Value should be between 1 and 255.",
                    "type": "integer",
                    "format": "int64",
                    "default": "64",
                    "maximum": 255,
                    "minimum": 1
                },
                "password": {
                    "description": "Enable Password authentication. Disabled if the string is empty. Length of string should be between 1 and 128.",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "remote-as": {
                    "description": "ASN the neighbor belongs to.",
                    "$ref": "#/definitions/apiBgpAsn"
                },
                "shutdown": {
                    "description": "Shutdown this neighbor session.",
                    "type": "boolean",
                    "format": "boolean"
                }
            }
        },
        "routingEVPNRoute": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "integer",
                    "format": "int64"
                },
                "type2-prefix": {
                    "$ref": "#/definitions/EVPNRouteEVPNType2Route"
                },
                "type5-prefix": {
                    "$ref": "#/definitions/EVPNRouteEVPNType5Route"
                }
            }
        },
        "routingEmptyReq": {
            "type": "object",
            "properties": {
                "Instance": {
                    "description": "Empty of course.",
                    "type": "string"
                }
            }
        },
        "routingHealth": {
            "type": "object",
            "properties": {
                "api-version": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/apiObjectMeta"
                },
                "spec": {
                    "$ref": "#/definitions/routingHealthSpec"
                },
                "status": {
                    "$ref": "#/definitions/routingHealthStatus"
                }
            }
        },
        "routingHealthSpec": {
            "type": "object"
        },
        "routingHealthStatus": {
            "type": "object",
            "properties": {
                "external-peers": {
                    "$ref": "#/definitions/HealthStatusPeeringStatus"
                },
                "internal-peers": {
                    "$ref": "#/definitions/HealthStatusPeeringStatus"
                },
                "pending-config-peers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "router-id": {
                    "type": "string"
                },
                "unexpected-peers": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "routingNeighbor": {
            "type": "object",
            "properties": {
                "api-version": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/apiObjectMeta"
                },
                "spec": {
                    "$ref": "#/definitions/networkBGPNeighbor"
                },
                "status": {
                    "$ref": "#/definitions/routingNeighborStatus"
                }
            }
        },
        "routingNeighborFilter": {
            "type": "object",
            "properties": {
                "api-version": {
                    "type": "string"
                },
                "instance": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/apiObjectMeta"
                },
                "neighbor": {
                    "type": "string"
                }
            }
        },
        "routingNeighborList": {
            "type": "object",
            "properties": {
                "api-version": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/routingNeighbor"
                    }
                },
                "kind": {
                    "type": "string"
                },
                "list-meta": {
                    "$ref": "#/definitions/apiListMeta"
                }
            }
        },
        "routingNeighborStatus": {
            "type": "object",
            "required": [
                "status",
                "prev-status",
                "sellocaladdrtype"
            ],
            "properties": {
                "capsneg": {
                    "type": "string"
                },
                "capsrcvd": {
                    "type": "string"
                },
                "capssent": {
                    "type": "string"
                },
                "connectretrycount": {
                    "type": "integer",
                    "format": "int64"
                },
                "fsmestablishedtime": {
                    "type": "string"
                },
                "fsmesttransitions": {
                    "type": "integer",
                    "format": "int64"
                },
                "holdtime": {
                    "type": "integer",
                    "format": "int64"
                },
                "inkeepalives": {
                    "type": "integer",
                    "format": "int64"
                },
                "innotifications": {
                    "type": "integer",
                    "format": "int64"
                },
                "inopens": {
                    "type": "integer",
                    "format": "int64"
                },
                "inprfxes": {
                    "type": "integer",
                    "format": "int64"
                },
                "inprfxesexpwdr": {
                    "type": "integer",
                    "format": "int64"
                },
                "inprfxesimpwdr": {
                    "type": "integer",
                    "format": "int64"
                },
                "inrefreshes": {
                    "type": "integer",
                    "format": "int64"
                },
                "intotalmessages": {
                    "type": "integer",
                    "format": "int64"
                },
                "inupdates": {
                    "type": "integer",
                    "format": "int64"
                },
                "inupdateselpstime": {
                    "type": "integer",
                    "format": "int64"
                },
                "keepalive": {
                    "type": "integer",
                    "format": "int64"
                },
                "lasterrorrcvd": {
                    "type": "string"
                },
                "lasterrorsent": {
                    "type": "string"
                },
                "localaddr": {
                    "description": "Should be a valid v4 or v6 IP address.",
                    "type": "string",
                    "example": "10.1.1.1, ff02::5 "
                },
                "orfentrycount": {
                    "type": "integer",
                    "format": "int64"
                },
                "outkeepalives": {
                    "type": "integer",
                    "format": "int64"
                },
                "outnotifications": {
                    "type": "integer",
                    "format": "int64"
                },
                "outopens": {
                    "type": "integer",
                    "format": "int64"
                },
                "outprfxes": {
                    "type": "integer",
                    "format": "int64"
                },
                "outprfxesdenied": {
                    "type": "integer",
                    "format": "int64"
                },
                "outprfxesexpwdr": {
                    "type": "integer",
                    "format": "int64"
                },
                "outprfxesimpwdr": {
                    "type": "integer",
                    "format": "int64"
                },
                "outrefreshes": {
                    "type": "integer",
                    "format": "int64"
                },
                "outtotalmessages": {
                    "type": "integer",
                    "format": "int64"
                },
                "outupdateelpstime": {
                    "type": "integer",
                    "format": "int64"
                },
                "outupdates": {
                    "type": "integer",
                    "format": "int64"
                },
                "peergr": {
                    "type": "integer",
                    "format": "int64"
                },
                "peerindex": {
                    "type": "integer",
                    "format": "int64"
                },
                "prev-status": {
                    "type": "string",
                    "default": "idle",
                    "enum": [
                        "idle",
                        "connect",
                        "active",
                        "opensent",
                        "openconfirmed",
                        "established"
                    ]
                },
                "rcvdmsgelpstime": {
                    "type": "integer",
                    "format": "int64"
                },
                "receivedholdtime": {
                    "type": "integer",
                    "format": "int64"
                },
                "routerefrrcvd": {
                    "type": "integer",
                    "format": "int64"
                },
                "routerefrsent": {
                    "type": "integer",
                    "format": "int64"
                },
                "sellocaladdrtype": {
                    "type": "string",
                    "default": "other",
                    "enum": [
                        "other",
                        "ipv4",
                        "ipv6",
                        "nsap",
                        "hdlc",
                        "bbn1822",
                        "ieee802",
                        "e163",
                        "e164",
                        "f69",
                        "x121",
                        "ipx",
                        "appletalk",
                        "decnetiv",
                        "banyanvin",
                        "e164_nsap",
                        "ipv4_tna",
                        "ipv6_tna",
                        "nsap_tna",
                        "vpn_ipv4",
                        "vpn_ipv6",
                        "l2vpn"
                    ]
                },
                "stalepathtime": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string",
                    "default": "idle",
                    "enum": [
                        "idle",
                        "connect",
                        "active",
                        "opensent",
                        "openconfirmed",
                        "established"
                    ]
                }
            }
        },
        "routingRoute": {
            "type": "object",
            "properties": {
                "api-version": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/apiObjectMeta"
                },
                "status": {
                    "$ref": "#/definitions/routingRouteStatus"
                }
            }
        },
        "routingRouteFilter": {
            "type": "object",
            "properties": {
                "all-routes": {
                    "description": "Fetch all routes rather than just the best routes selected by BGP.",
                    "type": "boolean",
                    "format": "boolean"
                },
                "api-version": {
                    "type": "string"
                },
                "extcomm": {
                    "type": "string"
                },
                "instance": {
                    "type": "string"
                },
                "ipaddress": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/apiObjectMeta"
                },
                "nhop": {
                    "type": "string"
                },
                "page-number": {
                    "type": "integer",
                    "format": "int64"
                },
                "rtype": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "vnid": {
                    "type": "string"
                }
            }
        },
        "routingRouteList": {
            "type": "object",
            "properties": {
                "api-version": {
                    "type": "string"
                },
                "count": {
                    "description": "The number of items returned in the current response.",
                    "type": "integer",
                    "format": "int64"
                },
                "items": {
                    "description": "List of items being returned.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/routingRoute"
                    }
                },
                "kind": {
                    "type": "string"
                },
                "list-meta": {
                    "$ref": "#/definitions/apiListMeta"
                },
                "page-number": {
                    "description": "The page number of the items being returned.",
                    "type": "integer",
                    "format": "int64"
                },
                "total": {
                    "description": "The total number of items available in the dataplane.",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "routingRouteStatus": {
            "type": "object",
            "properties": {
                "aspath": {
                    "type": "string"
                },
                "bestroute": {
                    "type": "boolean",
                    "format": "boolean"
                },
                "ecmproute": {
                    "type": "boolean",
                    "format": "boolean"
                },
                "extcomm": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "flap_start_time": {
                    "type": "integer",
                    "format": "int64"
                },
                "flap_stats_flapcnt": {
                    "type": "integer",
                    "format": "int64"
                },
                "flap_stats_supprsd": {
                    "type": "boolean",
                    "format": "boolean"
                },
                "isactive": {
                    "type": "string"
                },
                "nexthopaddr": {
                    "type": "string"
                },
                "pathorigid": {
                    "type": "string"
                },
                "prefix": {
                    "$ref": "#/definitions/routingEVPNRoute"
                },
                "reasonnotbest": {
                    "type": "string"
                },
                "remote_addr": {
                    "type": "string"
                },
                "routesource": {
                    "type": "string"
                },
                "stale": {
                    "type": "boolean",
                    "format": "boolean"
                }
            }
        }
    }
}