{
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "\n",
        "title": "Network API reference"
    },
    "paths": {
        "/configs/network/v1/ipam-policies": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "List IPAMPolicy objects",
                "operationId": "ListIPAMPolicy_1",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the object, unique within a Namespace for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on the tenant the user, who created the object, belongs to. Must be alpha-numerics. Length of string should be between 1 and 48.",
                        "name": "O.tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "O.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "O.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "O.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "O.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "O.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "O.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LabelSelector to select on labels in list or watch results.",
                        "name": "label-selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FieldSelector to select on field values in list or watch results.",
                        "name": "field-selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
                        "name": "field-change-selector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
                        "name": "max-results",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order to sort List results in.",
                        "name": "sort-order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.",
                        "name": "meta-only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkIPAMPolicyList"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Create IPAMPolicy object",
                "operationId": "AddIPAMPolicy_1",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/networkIPAMPolicy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkIPAMPolicy"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/ipam-policies/{O.Name}": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Get IPAMPolicy object",
                "operationId": "GetIPAMPolicy_1",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kind represents the type of the API object.",
                        "name": "T.kind",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "APIVersion defines the version of the API object. This can only be set by the server.",
                        "name": "T.api-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on the tenant the user, who created the object, belongs to. Must be alpha-numerics. Length of string should be between 1 and 48.",
                        "name": "meta.tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "meta.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "meta.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "meta.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "meta.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "meta.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "spec.type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The Generation ID this status is for.",
                        "name": "propagation-status.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of Naples that this version has already been pushed to.",
                        "name": "propagation-status.updated",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of Naples pending. If this is 0 it can be assumed that everything is up to date.",
                        "name": "propagation-status.pending",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The Version running on the slowest Naples.",
                        "name": "propagation-status.min-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Textual description of propagation status.",
                        "name": "propagation-status.status",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "list of DSCs where propagation did not complete.",
                        "name": "propagation-status.pending-dscs",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkIPAMPolicy"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Update IPAMPolicy object",
                "operationId": "UpdateIPAMPolicy_1",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/networkIPAMPolicy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkIPAMPolicy"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Delete IPAMPolicy object",
                "operationId": "DeleteIPAMPolicy_1",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkIPAMPolicy"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/ipam-policies/{O.Name}/label": {
            "post": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Label IPAMPolicy object",
                "operationId": "LabelIPAMPolicy_1",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiLabel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkIPAMPolicy"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/networkinterfaces": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "List NetworkInterface objects",
                "operationId": "ListNetworkInterface",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the object, unique within a Namespace for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on the tenant the user, who created the object, belongs to. Must be alpha-numerics. Length of string should be between 1 and 48.",
                        "name": "O.tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "O.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "O.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "O.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "O.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "O.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "O.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LabelSelector to select on labels in list or watch results.",
                        "name": "label-selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FieldSelector to select on field values in list or watch results.",
                        "name": "field-selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
                        "name": "field-change-selector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
                        "name": "max-results",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order to sort List results in.",
                        "name": "sort-order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.",
                        "name": "meta-only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkNetworkInterfaceList"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/networkinterfaces/{O.Name}": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Get NetworkInterface object",
                "operationId": "GetNetworkInterface",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kind represents the type of the API object.",
                        "name": "T.kind",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "APIVersion defines the version of the API object. This can only be set by the server.",
                        "name": "T.api-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on the tenant the user, who created the object, belongs to. Must be alpha-numerics. Length of string should be between 1 and 48.",
                        "name": "meta.tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "meta.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "meta.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "meta.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "meta.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "meta.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "desired Admin state of the port.",
                        "name": "spec.admin-status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Intefaae speed.",
                        "name": "spec.speed",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Mtu of the interface.",
                        "name": "spec.mtu",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Pause type.",
                        "name": "pause.type",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "TX Pause enabled.",
                        "name": "pause.tx-pause-enabled",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "RX Pause enabled.",
                        "name": "pause.rx-pause-enabled",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Type specifies the type of interface.",
                        "name": "spec.type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "spec.attach-tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "AttachNetwork associates the interface with a Network. This is only valid for HOST_PF type.",
                        "name": "spec.attach-network",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "spec.ip-alloc-type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "IPAddress contains the Management IP address of the DistributedServiceCard in CIDR format. Should be a valid v4 or v6 CIDR block.",
                        "name": "ip-config.ip-address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "DefaultGW contains the default gateway's IP address. Should be a valid v4 or v6 IP address.",
                        "name": "ip-config.default-gw",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "DNSServers contains a list of DNS Servers that can be used on DistributedServiceCard.",
                        "name": "ip-config.dns-servers",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Override system allocated MAC address. Should be a valid MAC address.",
                        "name": "spec.mac-address",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "ConnectionTracking enables connection tracking on the interface. This is valid only for HOST_PF type.",
                        "name": "spec.connection-tracking",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "spec.tx-policer",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "EnableFwLogging enables flow logging on the interface. This is valid only for HOST_PF type.",
                        "name": "spec.enable-fw-logging",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "VNFAttached knob on the interface. This is valid only for HOST_PF type.",
                        "name": "spec.vnf-attached",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "status.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "status.dsc",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "status.type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "status.oper-status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Should be a valid MAC address.",
                        "name": "status.primary-mac",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "interface name seen by the host driver.",
                        "name": "if-host-status.host-ifname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "PCIE Device ID.",
                        "name": "if-host-status.device-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "mac address of the interface.",
                        "name": "if-host-status.mac-address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LinkSpeed auto-negotiated.",
                        "name": "if-uplink-status.link-speed",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "transceiver-status.state",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "transceiver-status.cable-type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "transceiver-status.pid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "IPAddress contains the Management IP address of the DistributedServiceCard in CIDR format. Should be a valid v4 or v6 CIDR block.",
                        "name": "ip-config.ip-address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "DefaultGW contains the default gateway's IP address. Should be a valid v4 or v6 IP address.",
                        "name": "ip-config.default-gw",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "DNSServers contains a list of DNS Servers that can be used on DistributedServiceCard.",
                        "name": "ip-config.dns-servers",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Chassis  ID.",
                        "name": "lldp-neighbor.chassis-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "System Name.",
                        "name": "lldp-neighbor.sys-name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "System Description.",
                        "name": "lldp-neighbor.sys-description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Port Name.",
                        "name": "lldp-neighbor.port-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Port Description.",
                        "name": "lldp-neighbor.port-description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Mgmt IP.",
                        "name": "lldp-neighbor.mgmt-address",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "status.mirror-sessions",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Set only if interface is on Venice Node.",
                        "name": "status.cluster-node",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "status.dsc-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The Generation ID this status is for.",
                        "name": "propagation-status.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of Naples that this version has already been pushed to.",
                        "name": "propagation-status.updated",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of Naples pending. If this is 0 it can be assumed that everything is up to date.",
                        "name": "propagation-status.pending",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The Version running on the slowest Naples.",
                        "name": "propagation-status.min-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Textual description of propagation status.",
                        "name": "propagation-status.status",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "list of DSCs where propagation did not complete.",
                        "name": "propagation-status.pending-dscs",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkNetworkInterface"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Update NetworkInterface object",
                "operationId": "UpdateNetworkInterface",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/networkNetworkInterface"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkNetworkInterface"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/networkinterfaces/{O.Name}/label": {
            "post": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Label NetworkInterface object",
                "operationId": "LabelNetworkInterface",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiLabel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkNetworkInterface"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/networks": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "List Network objects",
                "operationId": "ListNetwork_1",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the object, unique within a Namespace for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on the tenant the user, who created the object, belongs to. Must be alpha-numerics. Length of string should be between 1 and 48.",
                        "name": "O.tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "O.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "O.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "O.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "O.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "O.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "O.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LabelSelector to select on labels in list or watch results.",
                        "name": "label-selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FieldSelector to select on field values in list or watch results.",
                        "name": "field-selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
                        "name": "field-change-selector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
                        "name": "max-results",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order to sort List results in.",
                        "name": "sort-order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.",
                        "name": "meta-only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkNetworkList"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Create Network object",
                "operationId": "AddNetwork_1",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/networkNetwork"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkNetwork"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/networks/{O.Name}": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Get Network object",
                "operationId": "GetNetwork_1",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kind represents the type of the API object.",
                        "name": "T.kind",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "APIVersion defines the version of the API object. This can only be set by the server.",
                        "name": "T.api-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on the tenant the user, who created the object, belongs to. Must be alpha-numerics. Length of string should be between 1 and 48.",
                        "name": "meta.tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "meta.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "meta.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "meta.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "meta.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "meta.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "type of network. (vlan/vxlan/routed etc).",
                        "name": "spec.type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "IPv4 subnet CIDR. Should be a valid v4 or v6 CIDR block.",
                        "name": "spec.ipv4-subnet",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "IPv4 gateway for this subnet. Should be a valid v4 or v6 IP address.",
                        "name": "spec.ipv4-gateway",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "IPv6 subnet CIDR.",
                        "name": "spec.ipv6-subnet",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "IPv6 gateway.",
                        "name": "spec.ipv6-gateway",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Vlan ID for the network. Value should be between 0 and 4095.",
                        "name": "spec.vlan-id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Vxlan VNI for the network. Value should be between 0 and 16777215.",
                        "name": "spec.vxlan-vni",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "VirtualRouter specifies the VRF this network belongs to.",
                        "name": "spec.virtual-router",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Relay Configuration if any.",
                        "name": "spec.ipam-policy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Address family where this config applies.",
                        "name": "route-import-export.address-family",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "True indicates the system will generate the RD automatically.",
                        "name": "route-import-export.rd-auto",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "RD Type as in rfc4364.",
                        "name": "rd.type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "admin-value.Format",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "admin-value.Value",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Assigned subfield of Value. Length depends on Type.",
                        "name": "rd.assigned-value",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Security Policy to apply in the ingress direction.",
                        "name": "spec.ingress-security-policy",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Security Policy to apply in the egress direction.",
                        "name": "spec.egress-security-policy",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "list of all workloads in this network.",
                        "name": "status.workloads",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "byte",
                        "description": "allocated IPv4 addresses (bitmap).",
                        "name": "status.allocated-ipv4-addrs",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "uint64",
                        "description": "Handle is the internal Handle allocated to this network.",
                        "name": "status.id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "status.oper-state",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The Generation ID this status is for.",
                        "name": "propagation-status.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of Naples that this version has already been pushed to.",
                        "name": "propagation-status.updated",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of Naples pending. If this is 0 it can be assumed that everything is up to date.",
                        "name": "propagation-status.pending",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The Version running on the slowest Naples.",
                        "name": "propagation-status.min-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Textual description of propagation status.",
                        "name": "propagation-status.status",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "list of DSCs where propagation did not complete.",
                        "name": "propagation-status.pending-dscs",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkNetwork"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Update Network object",
                "operationId": "UpdateNetwork_1",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/networkNetwork"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkNetwork"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Delete Network object",
                "operationId": "DeleteNetwork_1",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkNetwork"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/networks/{O.Name}/label": {
            "post": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Label Network object",
                "operationId": "LabelNetwork_1",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiLabel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkNetwork"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/policer-profile": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "List PolicerProfile objects",
                "operationId": "ListPolicerProfile_1",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the object, unique within a Namespace for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on the tenant the user, who created the object, belongs to. Must be alpha-numerics. Length of string should be between 1 and 48.",
                        "name": "O.tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "O.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "O.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "O.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "O.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "O.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "O.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LabelSelector to select on labels in list or watch results.",
                        "name": "label-selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FieldSelector to select on field values in list or watch results.",
                        "name": "field-selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
                        "name": "field-change-selector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
                        "name": "max-results",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order to sort List results in.",
                        "name": "sort-order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.",
                        "name": "meta-only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkPolicerProfileList"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Create PolicerProfile object",
                "operationId": "AddPolicerProfile_1",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/networkPolicerProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkPolicerProfile"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/policer-profile/{O.Name}": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Get PolicerProfile object",
                "operationId": "GetPolicerProfile_1",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kind represents the type of the API object.",
                        "name": "T.kind",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "APIVersion defines the version of the API object. This can only be set by the server.",
                        "name": "T.api-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on the tenant the user, who created the object, belongs to. Must be alpha-numerics. Length of string should be between 1 and 48.",
                        "name": "meta.tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "meta.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "meta.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "meta.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "meta.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "meta.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "uint64",
                        "description": "Maximum permissible bytes per second before policer will start dropping traffic. Either BytesPerSecond/PacketsPerSecond can be specified.",
                        "name": "criteria.bytes-per-second",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "uint64",
                        "description": "Maximum permissible packets per second before policer will start dropping traffic. Either BytesPerSecond/PacketsPerSecond can be specified.",
                        "name": "criteria.packets-per-second",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "uint64",
                        "description": "Burst size in number of packets/bytes as policer criteria.",
                        "name": "criteria.burst-size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "exceed-action.policer-action",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The Generation ID this status is for.",
                        "name": "propagation-status.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of Naples that this version has already been pushed to.",
                        "name": "propagation-status.updated",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of Naples pending. If this is 0 it can be assumed that everything is up to date.",
                        "name": "propagation-status.pending",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The Version running on the slowest Naples.",
                        "name": "propagation-status.min-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Textual description of propagation status.",
                        "name": "propagation-status.status",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "list of DSCs where propagation did not complete.",
                        "name": "propagation-status.pending-dscs",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkPolicerProfile"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Update PolicerProfile object",
                "operationId": "UpdatePolicerProfile_1",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/networkPolicerProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkPolicerProfile"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Delete PolicerProfile object",
                "operationId": "DeletePolicerProfile_1",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkPolicerProfile"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/policer-profile/{O.Name}/label": {
            "post": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Label PolicerProfile object",
                "operationId": "LabelPolicerProfile_1",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiLabel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkPolicerProfile"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/route-tables": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "List RouteTable objects",
                "operationId": "ListRouteTable_1",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the object, unique within a Namespace for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on the tenant the user, who created the object, belongs to. Must be alpha-numerics. Length of string should be between 1 and 48.",
                        "name": "O.tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "O.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "O.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "O.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "O.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "O.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "O.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LabelSelector to select on labels in list or watch results.",
                        "name": "label-selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FieldSelector to select on field values in list or watch results.",
                        "name": "field-selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
                        "name": "field-change-selector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
                        "name": "max-results",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order to sort List results in.",
                        "name": "sort-order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.",
                        "name": "meta-only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkRouteTableList"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/route-tables/{O.Name}": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Get RouteTable object",
                "operationId": "GetRouteTable_1",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kind represents the type of the API object.",
                        "name": "T.kind",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "APIVersion defines the version of the API object. This can only be set by the server.",
                        "name": "T.api-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on the tenant the user, who created the object, belongs to. Must be alpha-numerics. Length of string should be between 1 and 48.",
                        "name": "meta.tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "meta.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "meta.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "meta.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "meta.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "meta.self-link",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkRouteTable"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/routing-config": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "List RoutingConfig objects",
                "operationId": "ListRoutingConfig",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the object, unique within a Namespace for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on the tenant the user, who created the object, belongs to. Must be alpha-numerics. Length of string should be between 1 and 48.",
                        "name": "O.tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "O.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "O.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "O.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "O.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "O.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "O.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LabelSelector to select on labels in list or watch results.",
                        "name": "label-selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FieldSelector to select on field values in list or watch results.",
                        "name": "field-selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
                        "name": "field-change-selector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
                        "name": "max-results",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order to sort List results in.",
                        "name": "sort-order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.",
                        "name": "meta-only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkRoutingConfigList"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Create RoutingConfig object",
                "operationId": "AddRoutingConfig",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/networkRoutingConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkRoutingConfig"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/routing-config/{O.Name}": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Get RoutingConfig object",
                "operationId": "GetRoutingConfig",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kind represents the type of the API object.",
                        "name": "T.kind",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "APIVersion defines the version of the API object. This can only be set by the server.",
                        "name": "T.api-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on the tenant the user, who created the object, belongs to. Must be alpha-numerics. Length of string should be between 1 and 48.",
                        "name": "meta.tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "meta.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "meta.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "meta.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "meta.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "meta.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Router ID for the BGP Instance. Should be a valid v4 or v6 IP address.",
                        "name": "bgp-config.router-id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "as-number.ASNumber",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "KeepaliveInterval is time interval at which keepalive messages are sent. Value should be between 0 and 3600.",
                        "name": "bgp-config.keepalive-interval",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Holdtime is time for which not receiving a keepalive message results in declaring the peer as dead. Value should be between 0 and 3600.",
                        "name": "bgp-config.holdtime",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "DSCAutoConfig sets the flag that this config is to be used as a template for auto configuration.",
                        "name": "bgp-config.dsc-auto-config",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "SuppressDefaultResolution excludes default route from being used to resolve nexthop reachability in the underlay. WARNING: modifying this has network-wide data traffic impact as it temporarily deactivates and then re-activates all underlay and overlay routes on every node where this config is applied.",
                        "name": "bgp-config.suppress-default-resolution",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The Generation ID this status is for.",
                        "name": "propagation-status.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of Naples that this version has already been pushed to.",
                        "name": "propagation-status.updated",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of Naples pending. If this is 0 it can be assumed that everything is up to date.",
                        "name": "propagation-status.pending",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The Version running on the slowest Naples.",
                        "name": "propagation-status.min-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Textual description of propagation status.",
                        "name": "propagation-status.status",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "list of DSCs where propagation did not complete.",
                        "name": "propagation-status.pending-dscs",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkRoutingConfig"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Update RoutingConfig object",
                "operationId": "UpdateRoutingConfig",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/networkRoutingConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkRoutingConfig"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Delete RoutingConfig object",
                "operationId": "DeleteRoutingConfig",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkRoutingConfig"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/routing-config/{O.Name}/label": {
            "post": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Label RoutingConfig object",
                "operationId": "LabelRoutingConfig",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiLabel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkRoutingConfig"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/tenant/{O.Tenant}/ipam-policies": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "List IPAMPolicy objects",
                "operationId": "ListIPAMPolicy",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the object, unique within a Namespace for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "O.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "O.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "O.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "O.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "O.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "O.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LabelSelector to select on labels in list or watch results.",
                        "name": "label-selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FieldSelector to select on field values in list or watch results.",
                        "name": "field-selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
                        "name": "field-change-selector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
                        "name": "max-results",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order to sort List results in.",
                        "name": "sort-order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.",
                        "name": "meta-only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkIPAMPolicyList"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Create IPAMPolicy object",
                "operationId": "AddIPAMPolicy",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/networkIPAMPolicy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkIPAMPolicy"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/tenant/{O.Tenant}/ipam-policies/{O.Name}": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Get IPAMPolicy object",
                "operationId": "GetIPAMPolicy",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kind represents the type of the API object.",
                        "name": "T.kind",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "APIVersion defines the version of the API object. This can only be set by the server.",
                        "name": "T.api-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "meta.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "meta.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "meta.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "meta.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "meta.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "spec.type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The Generation ID this status is for.",
                        "name": "propagation-status.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of Naples that this version has already been pushed to.",
                        "name": "propagation-status.updated",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of Naples pending. If this is 0 it can be assumed that everything is up to date.",
                        "name": "propagation-status.pending",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The Version running on the slowest Naples.",
                        "name": "propagation-status.min-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Textual description of propagation status.",
                        "name": "propagation-status.status",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "list of DSCs where propagation did not complete.",
                        "name": "propagation-status.pending-dscs",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkIPAMPolicy"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Update IPAMPolicy object",
                "operationId": "UpdateIPAMPolicy",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/networkIPAMPolicy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkIPAMPolicy"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Delete IPAMPolicy object",
                "operationId": "DeleteIPAMPolicy",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkIPAMPolicy"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/tenant/{O.Tenant}/ipam-policies/{O.Name}/label": {
            "post": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Label IPAMPolicy object",
                "operationId": "LabelIPAMPolicy",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiLabel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkIPAMPolicy"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/tenant/{O.Tenant}/networks": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "List Network objects",
                "operationId": "ListNetwork",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the object, unique within a Namespace for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "O.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "O.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "O.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "O.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "O.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "O.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LabelSelector to select on labels in list or watch results.",
                        "name": "label-selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FieldSelector to select on field values in list or watch results.",
                        "name": "field-selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
                        "name": "field-change-selector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
                        "name": "max-results",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order to sort List results in.",
                        "name": "sort-order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.",
                        "name": "meta-only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkNetworkList"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Create Network object",
                "operationId": "AddNetwork",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/networkNetwork"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkNetwork"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/tenant/{O.Tenant}/networks/{O.Name}": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Get Network object",
                "operationId": "GetNetwork",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kind represents the type of the API object.",
                        "name": "T.kind",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "APIVersion defines the version of the API object. This can only be set by the server.",
                        "name": "T.api-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "meta.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "meta.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "meta.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "meta.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "meta.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "type of network. (vlan/vxlan/routed etc).",
                        "name": "spec.type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "IPv4 subnet CIDR. Should be a valid v4 or v6 CIDR block.",
                        "name": "spec.ipv4-subnet",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "IPv4 gateway for this subnet. Should be a valid v4 or v6 IP address.",
                        "name": "spec.ipv4-gateway",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "IPv6 subnet CIDR.",
                        "name": "spec.ipv6-subnet",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "IPv6 gateway.",
                        "name": "spec.ipv6-gateway",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Vlan ID for the network. Value should be between 0 and 4095.",
                        "name": "spec.vlan-id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Vxlan VNI for the network. Value should be between 0 and 16777215.",
                        "name": "spec.vxlan-vni",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "VirtualRouter specifies the VRF this network belongs to.",
                        "name": "spec.virtual-router",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Relay Configuration if any.",
                        "name": "spec.ipam-policy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Address family where this config applies.",
                        "name": "route-import-export.address-family",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "True indicates the system will generate the RD automatically.",
                        "name": "route-import-export.rd-auto",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "RD Type as in rfc4364.",
                        "name": "rd.type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "admin-value.Format",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "admin-value.Value",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Assigned subfield of Value. Length depends on Type.",
                        "name": "rd.assigned-value",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Security Policy to apply in the ingress direction.",
                        "name": "spec.ingress-security-policy",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Security Policy to apply in the egress direction.",
                        "name": "spec.egress-security-policy",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "list of all workloads in this network.",
                        "name": "status.workloads",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "byte",
                        "description": "allocated IPv4 addresses (bitmap).",
                        "name": "status.allocated-ipv4-addrs",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "uint64",
                        "description": "Handle is the internal Handle allocated to this network.",
                        "name": "status.id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "status.oper-state",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The Generation ID this status is for.",
                        "name": "propagation-status.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of Naples that this version has already been pushed to.",
                        "name": "propagation-status.updated",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of Naples pending. If this is 0 it can be assumed that everything is up to date.",
                        "name": "propagation-status.pending",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The Version running on the slowest Naples.",
                        "name": "propagation-status.min-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Textual description of propagation status.",
                        "name": "propagation-status.status",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "list of DSCs where propagation did not complete.",
                        "name": "propagation-status.pending-dscs",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkNetwork"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Update Network object",
                "operationId": "UpdateNetwork",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/networkNetwork"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkNetwork"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Delete Network object",
                "operationId": "DeleteNetwork",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkNetwork"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/tenant/{O.Tenant}/networks/{O.Name}/label": {
            "post": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Label Network object",
                "operationId": "LabelNetwork",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiLabel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkNetwork"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/tenant/{O.Tenant}/policer-profile": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "List PolicerProfile objects",
                "operationId": "ListPolicerProfile",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the object, unique within a Namespace for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "O.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "O.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "O.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "O.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "O.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "O.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LabelSelector to select on labels in list or watch results.",
                        "name": "label-selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FieldSelector to select on field values in list or watch results.",
                        "name": "field-selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
                        "name": "field-change-selector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
                        "name": "max-results",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order to sort List results in.",
                        "name": "sort-order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.",
                        "name": "meta-only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkPolicerProfileList"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Create PolicerProfile object",
                "operationId": "AddPolicerProfile",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/networkPolicerProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkPolicerProfile"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/tenant/{O.Tenant}/policer-profile/{O.Name}": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Get PolicerProfile object",
                "operationId": "GetPolicerProfile",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kind represents the type of the API object.",
                        "name": "T.kind",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "APIVersion defines the version of the API object. This can only be set by the server.",
                        "name": "T.api-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "meta.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "meta.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "meta.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "meta.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "meta.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "uint64",
                        "description": "Maximum permissible bytes per second before policer will start dropping traffic. Either BytesPerSecond/PacketsPerSecond can be specified.",
                        "name": "criteria.bytes-per-second",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "uint64",
                        "description": "Maximum permissible packets per second before policer will start dropping traffic. Either BytesPerSecond/PacketsPerSecond can be specified.",
                        "name": "criteria.packets-per-second",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "uint64",
                        "description": "Burst size in number of packets/bytes as policer criteria.",
                        "name": "criteria.burst-size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "exceed-action.policer-action",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The Generation ID this status is for.",
                        "name": "propagation-status.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of Naples that this version has already been pushed to.",
                        "name": "propagation-status.updated",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of Naples pending. If this is 0 it can be assumed that everything is up to date.",
                        "name": "propagation-status.pending",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The Version running on the slowest Naples.",
                        "name": "propagation-status.min-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Textual description of propagation status.",
                        "name": "propagation-status.status",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "list of DSCs where propagation did not complete.",
                        "name": "propagation-status.pending-dscs",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkPolicerProfile"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Update PolicerProfile object",
                "operationId": "UpdatePolicerProfile",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/networkPolicerProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkPolicerProfile"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Delete PolicerProfile object",
                "operationId": "DeletePolicerProfile",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkPolicerProfile"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/tenant/{O.Tenant}/policer-profile/{O.Name}/label": {
            "post": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Label PolicerProfile object",
                "operationId": "LabelPolicerProfile",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiLabel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkPolicerProfile"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/tenant/{O.Tenant}/route-tables": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "List RouteTable objects",
                "operationId": "ListRouteTable",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the object, unique within a Namespace for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "O.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "O.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "O.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "O.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "O.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "O.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LabelSelector to select on labels in list or watch results.",
                        "name": "label-selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FieldSelector to select on field values in list or watch results.",
                        "name": "field-selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
                        "name": "field-change-selector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
                        "name": "max-results",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order to sort List results in.",
                        "name": "sort-order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.",
                        "name": "meta-only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkRouteTableList"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/tenant/{O.Tenant}/route-tables/{O.Name}": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Get RouteTable object",
                "operationId": "GetRouteTable",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kind represents the type of the API object.",
                        "name": "T.kind",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "APIVersion defines the version of the API object. This can only be set by the server.",
                        "name": "T.api-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "meta.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "meta.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "meta.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "meta.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "meta.self-link",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkRouteTable"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/tenant/{O.Tenant}/virtual-router-peering-groups": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "List VirtualRouterPeeringGroup objects",
                "operationId": "ListVirtualRouterPeeringGroup",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the object, unique within a Namespace for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "O.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "O.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "O.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "O.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "O.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "O.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LabelSelector to select on labels in list or watch results.",
                        "name": "label-selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FieldSelector to select on field values in list or watch results.",
                        "name": "field-selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
                        "name": "field-change-selector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
                        "name": "max-results",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order to sort List results in.",
                        "name": "sort-order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.",
                        "name": "meta-only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouterPeeringGroupList"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Create VirtualRouterPeeringGroup object",
                "operationId": "AddVirtualRouterPeeringGroup",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouterPeeringGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouterPeeringGroup"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/tenant/{O.Tenant}/virtual-router-peering-groups/{O.Name}": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Get VirtualRouterPeeringGroup object",
                "operationId": "GetVirtualRouterPeeringGroup",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kind represents the type of the API object.",
                        "name": "T.kind",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "APIVersion defines the version of the API object. This can only be set by the server.",
                        "name": "T.api-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "meta.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "meta.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "meta.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "meta.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "meta.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The Generation ID this status is for.",
                        "name": "propagation-status.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of Naples that this version has already been pushed to.",
                        "name": "propagation-status.updated",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of Naples pending. If this is 0 it can be assumed that everything is up to date.",
                        "name": "propagation-status.pending",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The Version running on the slowest Naples.",
                        "name": "propagation-status.min-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Textual description of propagation status.",
                        "name": "propagation-status.status",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "list of DSCs where propagation did not complete.",
                        "name": "propagation-status.pending-dscs",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouterPeeringGroup"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Update VirtualRouterPeeringGroup object",
                "operationId": "UpdateVirtualRouterPeeringGroup",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouterPeeringGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouterPeeringGroup"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Delete VirtualRouterPeeringGroup object",
                "operationId": "DeleteVirtualRouterPeeringGroup",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouterPeeringGroup"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/tenant/{O.Tenant}/virtual-router-peering-groups/{O.Name}/label": {
            "post": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Label VirtualRouterPeeringGroup object",
                "operationId": "LabelVirtualRouterPeeringGroup",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiLabel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouterPeeringGroup"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/tenant/{O.Tenant}/virtualrouters": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "List VirtualRouter objects",
                "operationId": "ListVirtualRouter",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the object, unique within a Namespace for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "O.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "O.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "O.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "O.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "O.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "O.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LabelSelector to select on labels in list or watch results.",
                        "name": "label-selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FieldSelector to select on field values in list or watch results.",
                        "name": "field-selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
                        "name": "field-change-selector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
                        "name": "max-results",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order to sort List results in.",
                        "name": "sort-order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.",
                        "name": "meta-only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouterList"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Create VirtualRouter object",
                "operationId": "AddVirtualRouter",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouter"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/tenant/{O.Tenant}/virtualrouters/{O.Name}": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Get VirtualRouter object",
                "operationId": "GetVirtualRouter",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kind represents the type of the API object.",
                        "name": "T.kind",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "APIVersion defines the version of the API object. This can only be set by the server.",
                        "name": "T.api-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "meta.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "meta.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "meta.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "meta.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "meta.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "spec.type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Default Router MAC Address to use for this Virtual Router. Should be a valid MAC address.",
                        "name": "spec.router-mac-address",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "VxlAN VNI for the Virtual Router. Value should be between 0 and 16777215.",
                        "name": "spec.vxlan-vni",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Address family where this config applies.",
                        "name": "route-import-export.address-family",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "True indicates the system will generate the RD automatically.",
                        "name": "route-import-export.rd-auto",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "RD Type as in rfc4364.",
                        "name": "rd.type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "admin-value.Format",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "admin-value.Value",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Assigned subfield of Value. Length depends on Type.",
                        "name": "rd.assigned-value",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Default IPAM policy for networks belonging to this Virtual Router. Any IPAM Policy specified in the Network overrides this.",
                        "name": "spec.default-ipam-policy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "uint64",
                        "description": "Handle allocated in the system.",
                        "name": "status.id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "status.route-table",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "RD Type as in rfc4364.",
                        "name": "rd.type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "admin-value.Format",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "admin-value.Value",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Assigned subfield of Value. Length depends on Type.",
                        "name": "rd.assigned-value",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The Generation ID this status is for.",
                        "name": "propagation-status.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of Naples that this version has already been pushed to.",
                        "name": "propagation-status.updated",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of Naples pending. If this is 0 it can be assumed that everything is up to date.",
                        "name": "propagation-status.pending",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The Version running on the slowest Naples.",
                        "name": "propagation-status.min-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Textual description of propagation status.",
                        "name": "propagation-status.status",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "list of DSCs where propagation did not complete.",
                        "name": "propagation-status.pending-dscs",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouter"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Update VirtualRouter object",
                "operationId": "UpdateVirtualRouter",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouter"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Delete VirtualRouter object",
                "operationId": "DeleteVirtualRouter",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouter"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/tenant/{O.Tenant}/virtualrouters/{O.Name}/label": {
            "post": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Label VirtualRouter object",
                "operationId": "LabelVirtualRouter",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiLabel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouter"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/virtual-router-peering-groups": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "List VirtualRouterPeeringGroup objects",
                "operationId": "ListVirtualRouterPeeringGroup_1",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the object, unique within a Namespace for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on the tenant the user, who created the object, belongs to. Must be alpha-numerics. Length of string should be between 1 and 48.",
                        "name": "O.tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "O.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "O.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "O.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "O.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "O.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "O.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LabelSelector to select on labels in list or watch results.",
                        "name": "label-selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FieldSelector to select on field values in list or watch results.",
                        "name": "field-selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
                        "name": "field-change-selector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
                        "name": "max-results",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order to sort List results in.",
                        "name": "sort-order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.",
                        "name": "meta-only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouterPeeringGroupList"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Create VirtualRouterPeeringGroup object",
                "operationId": "AddVirtualRouterPeeringGroup_1",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouterPeeringGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouterPeeringGroup"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/virtual-router-peering-groups/{O.Name}": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Get VirtualRouterPeeringGroup object",
                "operationId": "GetVirtualRouterPeeringGroup_1",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kind represents the type of the API object.",
                        "name": "T.kind",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "APIVersion defines the version of the API object. This can only be set by the server.",
                        "name": "T.api-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on the tenant the user, who created the object, belongs to. Must be alpha-numerics. Length of string should be between 1 and 48.",
                        "name": "meta.tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "meta.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "meta.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "meta.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "meta.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "meta.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The Generation ID this status is for.",
                        "name": "propagation-status.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of Naples that this version has already been pushed to.",
                        "name": "propagation-status.updated",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of Naples pending. If this is 0 it can be assumed that everything is up to date.",
                        "name": "propagation-status.pending",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The Version running on the slowest Naples.",
                        "name": "propagation-status.min-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Textual description of propagation status.",
                        "name": "propagation-status.status",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "list of DSCs where propagation did not complete.",
                        "name": "propagation-status.pending-dscs",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouterPeeringGroup"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Update VirtualRouterPeeringGroup object",
                "operationId": "UpdateVirtualRouterPeeringGroup_1",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouterPeeringGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouterPeeringGroup"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Delete VirtualRouterPeeringGroup object",
                "operationId": "DeleteVirtualRouterPeeringGroup_1",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouterPeeringGroup"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/virtual-router-peering-groups/{O.Name}/label": {
            "post": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Label VirtualRouterPeeringGroup object",
                "operationId": "LabelVirtualRouterPeeringGroup_1",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiLabel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouterPeeringGroup"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/virtualrouters": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "List VirtualRouter objects",
                "operationId": "ListVirtualRouter_1",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the object, unique within a Namespace for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on the tenant the user, who created the object, belongs to. Must be alpha-numerics. Length of string should be between 1 and 48.",
                        "name": "O.tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "O.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "O.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "O.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "O.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "O.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "O.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LabelSelector to select on labels in list or watch results.",
                        "name": "label-selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FieldSelector to select on field values in list or watch results.",
                        "name": "field-selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
                        "name": "field-change-selector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
                        "name": "max-results",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order to sort List results in.",
                        "name": "sort-order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.",
                        "name": "meta-only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouterList"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Create VirtualRouter object",
                "operationId": "AddVirtualRouter_1",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouter"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/virtualrouters/{O.Name}": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Get VirtualRouter object",
                "operationId": "GetVirtualRouter_1",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kind represents the type of the API object.",
                        "name": "T.kind",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "APIVersion defines the version of the API object. This can only be set by the server.",
                        "name": "T.api-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on the tenant the user, who created the object, belongs to. Must be alpha-numerics. Length of string should be between 1 and 48.",
                        "name": "meta.tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "meta.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "meta.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "meta.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "meta.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "meta.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "meta.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "spec.type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Default Router MAC Address to use for this Virtual Router. Should be a valid MAC address.",
                        "name": "spec.router-mac-address",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "VxlAN VNI for the Virtual Router. Value should be between 0 and 16777215.",
                        "name": "spec.vxlan-vni",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Address family where this config applies.",
                        "name": "route-import-export.address-family",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "True indicates the system will generate the RD automatically.",
                        "name": "route-import-export.rd-auto",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "RD Type as in rfc4364.",
                        "name": "rd.type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "admin-value.Format",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "admin-value.Value",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Assigned subfield of Value. Length depends on Type.",
                        "name": "rd.assigned-value",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Default IPAM policy for networks belonging to this Virtual Router. Any IPAM Policy specified in the Network overrides this.",
                        "name": "spec.default-ipam-policy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "uint64",
                        "description": "Handle allocated in the system.",
                        "name": "status.id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "status.route-table",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "RD Type as in rfc4364.",
                        "name": "rd.type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "admin-value.Format",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "admin-value.Value",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Assigned subfield of Value. Length depends on Type.",
                        "name": "rd.assigned-value",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The Generation ID this status is for.",
                        "name": "propagation-status.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of Naples that this version has already been pushed to.",
                        "name": "propagation-status.updated",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of Naples pending. If this is 0 it can be assumed that everything is up to date.",
                        "name": "propagation-status.pending",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The Version running on the slowest Naples.",
                        "name": "propagation-status.min-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Textual description of propagation status.",
                        "name": "propagation-status.status",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "list of DSCs where propagation did not complete.",
                        "name": "propagation-status.pending-dscs",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouter"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Update VirtualRouter object",
                "operationId": "UpdateVirtualRouter_1",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouter"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Delete VirtualRouter object",
                "operationId": "DeleteVirtualRouter_1",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouter"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/virtualrouters/{O.Name}/label": {
            "post": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Label VirtualRouter object",
                "operationId": "LabelVirtualRouter_1",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiLabel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(empty)",
                        "schema": {
                            "$ref": "#/definitions/networkVirtualRouter"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/watch/ipam-policies": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Watch IPAMPolicy objects. Supports WebSockets or HTTP long poll",
                "operationId": "WatchIPAMPolicy_1",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the object, unique within a Namespace for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on the tenant the user, who created the object, belongs to. Must be alpha-numerics. Length of string should be between 1 and 48.",
                        "name": "O.tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "O.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "O.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "O.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "O.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "O.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "O.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LabelSelector to select on labels in list or watch results.",
                        "name": "label-selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FieldSelector to select on field values in list or watch results.",
                        "name": "field-selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
                        "name": "field-change-selector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
                        "name": "max-results",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order to sort List results in.",
                        "name": "sort-order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.",
                        "name": "meta-only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(streaming responses)",
                        "schema": {
                            "$ref": "#/definitions/networkAutoMsgIPAMPolicyWatchHelper"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/watch/networkinterfaces": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Watch NetworkInterface objects. Supports WebSockets or HTTP long poll",
                "operationId": "WatchNetworkInterface",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the object, unique within a Namespace for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on the tenant the user, who created the object, belongs to. Must be alpha-numerics. Length of string should be between 1 and 48.",
                        "name": "O.tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "O.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "O.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "O.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "O.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "O.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "O.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LabelSelector to select on labels in list or watch results.",
                        "name": "label-selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FieldSelector to select on field values in list or watch results.",
                        "name": "field-selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
                        "name": "field-change-selector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
                        "name": "max-results",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order to sort List results in.",
                        "name": "sort-order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.",
                        "name": "meta-only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(streaming responses)",
                        "schema": {
                            "$ref": "#/definitions/networkAutoMsgNetworkInterfaceWatchHelper"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/watch/networks": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Watch Network objects. Supports WebSockets or HTTP long poll",
                "operationId": "WatchNetwork_1",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the object, unique within a Namespace for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on the tenant the user, who created the object, belongs to. Must be alpha-numerics. Length of string should be between 1 and 48.",
                        "name": "O.tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "O.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "O.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "O.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "O.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "O.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "O.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LabelSelector to select on labels in list or watch results.",
                        "name": "label-selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FieldSelector to select on field values in list or watch results.",
                        "name": "field-selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
                        "name": "field-change-selector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
                        "name": "max-results",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order to sort List results in.",
                        "name": "sort-order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.",
                        "name": "meta-only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(streaming responses)",
                        "schema": {
                            "$ref": "#/definitions/networkAutoMsgNetworkWatchHelper"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/watch/policer-profile": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Watch PolicerProfile objects. Supports WebSockets or HTTP long poll",
                "operationId": "WatchPolicerProfile_1",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the object, unique within a Namespace for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on the tenant the user, who created the object, belongs to. Must be alpha-numerics. Length of string should be between 1 and 48.",
                        "name": "O.tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "O.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "O.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "O.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "O.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "O.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "O.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LabelSelector to select on labels in list or watch results.",
                        "name": "label-selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FieldSelector to select on field values in list or watch results.",
                        "name": "field-selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
                        "name": "field-change-selector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
                        "name": "max-results",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order to sort List results in.",
                        "name": "sort-order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.",
                        "name": "meta-only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(streaming responses)",
                        "schema": {
                            "$ref": "#/definitions/networkAutoMsgPolicerProfileWatchHelper"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/watch/route-tables": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Watch RouteTable objects. Supports WebSockets or HTTP long poll",
                "operationId": "WatchRouteTable_1",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the object, unique within a Namespace for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on the tenant the user, who created the object, belongs to. Must be alpha-numerics. Length of string should be between 1 and 48.",
                        "name": "O.tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "O.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "O.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "O.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "O.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "O.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "O.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LabelSelector to select on labels in list or watch results.",
                        "name": "label-selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FieldSelector to select on field values in list or watch results.",
                        "name": "field-selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
                        "name": "field-change-selector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
                        "name": "max-results",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order to sort List results in.",
                        "name": "sort-order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.",
                        "name": "meta-only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(streaming responses)",
                        "schema": {
                            "$ref": "#/definitions/networkAutoMsgRouteTableWatchHelper"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/watch/routing-config": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Watch RoutingConfig objects. Supports WebSockets or HTTP long poll",
                "operationId": "WatchRoutingConfig",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the object, unique within a Namespace for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on the tenant the user, who created the object, belongs to. Must be alpha-numerics. Length of string should be between 1 and 48.",
                        "name": "O.tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "O.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "O.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "O.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "O.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "O.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "O.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LabelSelector to select on labels in list or watch results.",
                        "name": "label-selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FieldSelector to select on field values in list or watch results.",
                        "name": "field-selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
                        "name": "field-change-selector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
                        "name": "max-results",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order to sort List results in.",
                        "name": "sort-order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.",
                        "name": "meta-only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(streaming responses)",
                        "schema": {
                            "$ref": "#/definitions/networkAutoMsgRoutingConfigWatchHelper"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/watch/tenant/{O.Tenant}/ipam-policies": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Watch IPAMPolicy objects. Supports WebSockets or HTTP long poll",
                "operationId": "WatchIPAMPolicy",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the object, unique within a Namespace for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "O.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "O.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "O.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "O.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "O.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "O.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LabelSelector to select on labels in list or watch results.",
                        "name": "label-selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FieldSelector to select on field values in list or watch results.",
                        "name": "field-selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
                        "name": "field-change-selector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
                        "name": "max-results",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order to sort List results in.",
                        "name": "sort-order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.",
                        "name": "meta-only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(streaming responses)",
                        "schema": {
                            "$ref": "#/definitions/networkAutoMsgIPAMPolicyWatchHelper"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/watch/tenant/{O.Tenant}/networks": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Watch Network objects. Supports WebSockets or HTTP long poll",
                "operationId": "WatchNetwork",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the object, unique within a Namespace for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "O.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "O.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "O.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "O.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "O.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "O.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LabelSelector to select on labels in list or watch results.",
                        "name": "label-selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FieldSelector to select on field values in list or watch results.",
                        "name": "field-selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
                        "name": "field-change-selector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
                        "name": "max-results",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order to sort List results in.",
                        "name": "sort-order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.",
                        "name": "meta-only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(streaming responses)",
                        "schema": {
                            "$ref": "#/definitions/networkAutoMsgNetworkWatchHelper"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/watch/tenant/{O.Tenant}/policer-profile": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Watch PolicerProfile objects. Supports WebSockets or HTTP long poll",
                "operationId": "WatchPolicerProfile",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the object, unique within a Namespace for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "O.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "O.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "O.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "O.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "O.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "O.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LabelSelector to select on labels in list or watch results.",
                        "name": "label-selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FieldSelector to select on field values in list or watch results.",
                        "name": "field-selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
                        "name": "field-change-selector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
                        "name": "max-results",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order to sort List results in.",
                        "name": "sort-order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.",
                        "name": "meta-only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(streaming responses)",
                        "schema": {
                            "$ref": "#/definitions/networkAutoMsgPolicerProfileWatchHelper"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/watch/tenant/{O.Tenant}/route-tables": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Watch RouteTable objects. Supports WebSockets or HTTP long poll",
                "operationId": "WatchRouteTable",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the object, unique within a Namespace for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "O.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "O.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "O.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "O.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "O.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "O.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LabelSelector to select on labels in list or watch results.",
                        "name": "label-selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FieldSelector to select on field values in list or watch results.",
                        "name": "field-selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
                        "name": "field-change-selector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
                        "name": "max-results",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order to sort List results in.",
                        "name": "sort-order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.",
                        "name": "meta-only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(streaming responses)",
                        "schema": {
                            "$ref": "#/definitions/networkAutoMsgRouteTableWatchHelper"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/watch/tenant/{O.Tenant}/virtual-router-peering-groups": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Watch VirtualRouterPeeringGroup objects. Supports WebSockets or HTTP long poll",
                "operationId": "WatchVirtualRouterPeeringGroup",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the object, unique within a Namespace for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "O.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "O.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "O.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "O.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "O.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "O.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LabelSelector to select on labels in list or watch results.",
                        "name": "label-selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FieldSelector to select on field values in list or watch results.",
                        "name": "field-selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
                        "name": "field-change-selector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
                        "name": "max-results",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order to sort List results in.",
                        "name": "sort-order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.",
                        "name": "meta-only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(streaming responses)",
                        "schema": {
                            "$ref": "#/definitions/networkAutoMsgVirtualRouterPeeringGroupWatchHelper"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/watch/tenant/{O.Tenant}/virtualrouters": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Watch VirtualRouter objects. Supports WebSockets or HTTP long poll",
                "operationId": "WatchVirtualRouter",
                "parameters": [
                    {
                        "type": "string",
                        "name": "O.Tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the object, unique within a Namespace for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "O.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "O.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "O.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "O.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "O.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "O.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LabelSelector to select on labels in list or watch results.",
                        "name": "label-selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FieldSelector to select on field values in list or watch results.",
                        "name": "field-selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
                        "name": "field-change-selector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
                        "name": "max-results",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order to sort List results in.",
                        "name": "sort-order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.",
                        "name": "meta-only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(streaming responses)",
                        "schema": {
                            "$ref": "#/definitions/networkAutoMsgVirtualRouterWatchHelper"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/watch/virtual-router-peering-groups": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Watch VirtualRouterPeeringGroup objects. Supports WebSockets or HTTP long poll",
                "operationId": "WatchVirtualRouterPeeringGroup_1",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the object, unique within a Namespace for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on the tenant the user, who created the object, belongs to. Must be alpha-numerics. Length of string should be between 1 and 48.",
                        "name": "O.tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "O.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "O.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "O.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "O.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "O.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "O.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LabelSelector to select on labels in list or watch results.",
                        "name": "label-selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FieldSelector to select on field values in list or watch results.",
                        "name": "field-selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
                        "name": "field-change-selector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
                        "name": "max-results",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order to sort List results in.",
                        "name": "sort-order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.",
                        "name": "meta-only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(streaming responses)",
                        "schema": {
                            "$ref": "#/definitions/networkAutoMsgVirtualRouterPeeringGroupWatchHelper"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        },
        "/configs/network/v1/watch/virtualrouters": {
            "get": {
                "tags": [
                    "network/v1"
                ],
                "summary": "Watch VirtualRouter objects. Supports WebSockets or HTTP long poll",
                "operationId": "WatchVirtualRouter_1",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the object, unique within a Namespace for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on the tenant the user, who created the object, belongs to. Must be alpha-numerics. Length of string should be between 1 and 48.",
                        "name": "O.tenant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                        "name": "O.namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GenerationID is the generation Id for the object. This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                        "name": "O.generation-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource version in the object store. This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                        "name": "O.resource-version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UUID is the unique identifier for the object. This is generated on creation of the object. System generated, not updatable by user.",
                        "name": "O.uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreationTime is the creation time of the object. System generated and updated, not updatable by user.",
                        "name": "O.creation-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "ModTime is the Last Modification time of the object. System generated and updated, not updatable by user.",
                        "name": "O.mod-time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                        "name": "O.self-link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "LabelSelector to select on labels in list or watch results.",
                        "name": "label-selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "FieldSelector to select on field values in list or watch results.",
                        "name": "field-selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
                        "name": "field-change-selector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
                        "name": "max-results",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order to sort List results in.",
                        "name": "sort-order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "format": "boolean",
                        "description": "If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.",
                        "name": "meta-only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(streaming responses)",
                        "schema": {
                            "$ref": "#/definitions/networkAutoMsgVirtualRouterWatchHelper"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "409": {
                        "description": "Conflict while processing request",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "412": {
                        "description": "Pre-condition failed",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    },
                    "501": {
                        "description": "Request not implemented",
                        "schema": {
                            "$ref": "#/definitions/apiStatus"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apiAggWatchOptions": {
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/apiObjectMeta"
                },
                "watch-options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apiKindWatchOptions"
                    }
                }
            }
        },
        "apiBgpAsn": {
            "type": "object",
            "properties": {
                "ASNumber": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "apiKindWatchOptions": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "options": {
                    "$ref": "#/definitions/apiListWatchOptions"
                }
            }
        },
        "apiLabel": {
            "description": "Label is the input for label operations.",
            "type": "object",
            "properties": {
                "api-version": {
                    "type": "string"
                },
                "creation-time": {
                    "type": "string",
                    "format": "date-time"
                },
                "generation-id": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "mod-time": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "description": "Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 2,
                    "pattern": "^[a-zA-Z0-9][\\w\\-\\.]*[a-zA-Z0-9]$"
                },
                "namespace": {
                    "description": "Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 2,
                    "pattern": "^[a-zA-Z0-9][\\w\\-\\.]*[a-zA-Z0-9]$"
                },
                "resource-version": {
                    "type": "string"
                },
                "self-link": {
                    "type": "string"
                },
                "tenant": {
                    "description": "Must be alpha-numerics. Length of string should be between 1 and 48.",
                    "type": "string",
                    "maxLength": 48,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z0-9]+$"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "apiListMeta": {
            "description": "ListMeta contains the metadata for list of objects.",
            "type": "object",
            "properties": {
                "resource-version": {
                    "description": "Resource version of object store at the time of list generation.",
                    "type": "string"
                },
                "total-count": {
                    "description": "TotalCount is the total count of results (non paginated) that the server holds.",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "apiListWatchOptions": {
            "type": "object",
            "required": [
                "sort-order"
            ],
            "properties": {
                "creation-time": {
                    "type": "string",
                    "format": "date-time"
                },
                "field-change-selector": {
                    "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "field-selector": {
                    "description": "FieldSelector to select on field values in list or watch results.",
                    "type": "string"
                },
                "from": {
                    "description": "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
                    "type": "integer",
                    "format": "int32"
                },
                "generation-id": {
                    "type": "string"
                },
                "label-selector": {
                    "description": "LabelSelector to select on labels in list or watch results.",
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "max-results": {
                    "description": "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
                    "type": "integer",
                    "format": "int32"
                },
                "meta-only": {
                    "description": "If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.",
                    "type": "boolean",
                    "format": "boolean",
                    "default": "false"
                },
                "mod-time": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "description": "Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 2,
                    "pattern": "^[a-zA-Z0-9][\\w\\-\\.]*[a-zA-Z0-9]$"
                },
                "namespace": {
                    "description": "Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 2,
                    "pattern": "^[a-zA-Z0-9][\\w\\-\\.]*[a-zA-Z0-9]$"
                },
                "resource-version": {
                    "type": "string"
                },
                "self-link": {
                    "type": "string"
                },
                "sort-order": {
                    "description": "order to sort List results in.",
                    "type": "string",
                    "default": "none",
                    "enum": [
                        "none",
                        "by-name",
                        "by-name-reverse",
                        "by-version",
                        "by-version-reverse",
                        "by-creation-time",
                        "by-creation-time-reverse",
                        "by-mod-time",
                        "by-mod-time-reverse"
                    ],
                    "x-ui-hints": {
                        "by-creation-time": "By Creation Time",
                        "by-creation-time-reverse": "By Creation Time Reverse",
                        "by-mod-time": "By Modification Time",
                        "by-mod-time-reverse": "By Modification Time Reverse",
                        "by-name": "By Name",
                        "by-name-reverse": "By Name Reverse",
                        "by-version": "By Version",
                        "by-version-reverse": "By Version Reverse",
                        "none": "None"
                    }
                },
                "tenant": {
                    "description": "Must be alpha-numerics. Length of string should be between 1 and 48.",
                    "type": "string",
                    "maxLength": 48,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z0-9]+$"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "apiObjectMeta": {
            "description": "ObjectMeta contains metadata that all objects stored in kvstore must have.",
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "creation-time": {
                    "description": "System generated and updated, not updatable by user.",
                    "type": "string",
                    "format": "date-time",
                    "title": "CreationTime is the creation time of the object"
                },
                "generation-id": {
                    "description": "This is incremented anytime there is an update to the user intent, including Spec update and any update to ObjectMeta. System generated and updated, not updatable by user.",
                    "type": "string",
                    "title": "GenerationID is the generation Id for the object"
                },
                "labels": {
                    "type": "object",
                    "title": "Labels are arbitrary (key,value) pairs associated with any object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "mod-time": {
                    "description": "System generated and updated, not updatable by user.",
                    "type": "string",
                    "format": "date-time",
                    "title": "ModTime is the Last Modification time of the object"
                },
                "name": {
                    "description": "Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                    "type": "string",
                    "title": "Name of the object, unique within a Namespace for scoped objects",
                    "maxLength": 64,
                    "minLength": 2,
                    "pattern": "^[a-zA-Z0-9][\\w\\-\\.]*[a-zA-Z0-9]$"
                },
                "namespace": {
                    "description": "Namespace of the object, for scoped objects. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 2,
                    "pattern": "^[a-zA-Z0-9][\\w\\-\\.]*[a-zA-Z0-9]$"
                },
                "resource-version": {
                    "description": "This is updated anytime there is any change to the object. System generated and updated, not updatable by user.",
                    "type": "string",
                    "title": "Resource version in the object store"
                },
                "self-link": {
                    "description": "When the object is served from the API-GW it is the URI path. Example: - \"/v1/tenants/tenants/tenant2\" System generated and updated, not updatable by user.",
                    "type": "string",
                    "title": "SelfLink is a link for accessing this object"
                },
                "tenant": {
                    "description": "This can be automatically filled in many cases based on the tenant the user, who created the object, belongs to. Must be alpha-numerics. Length of string should be between 1 and 48.",
                    "type": "string",
                    "title": "Tenant to which the object belongs to",
                    "maxLength": 48,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z0-9]+$"
                },
                "uuid": {
                    "description": "This is generated on creation of the object. System generated, not updatable by user.",
                    "type": "string",
                    "title": "UUID is the unique identifier for the object"
                }
            }
        },
        "apiObjectRef": {
            "description": "ObjectRef contains identifying information about an object.",
            "type": "object",
            "properties": {
                "kind": {
                    "description": "Kind represents the type of the API object.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the object, unique within a Namespace for scoped objects.",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace of the object, for scoped objects.",
                    "type": "string"
                },
                "tenant": {
                    "description": "Tenant of the object.",
                    "type": "string"
                },
                "uri": {
                    "description": "URI is a link to accessing the referenced object.",
                    "type": "string"
                }
            }
        },
        "apiRDAdminValue": {
            "type": "object",
            "properties": {
                "Format": {
                    "type": "string"
                },
                "Value": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "apiStatus": {
            "description": "Status is returned for calls that dont return objects.",
            "type": "object",
            "properties": {
                "api-version": {
                    "type": "string"
                },
                "code": {
                    "description": "Code is the HTTP status code.",
                    "type": "integer",
                    "format": "int32"
                },
                "kind": {
                    "type": "string"
                },
                "message": {
                    "description": "Message contains human readable form of the error.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "object-ref": {
                    "description": "Reference to the object (optional) for which this status is being sent.",
                    "$ref": "#/definitions/apiObjectRef"
                },
                "result": {
                    "description": "Result contains the status of the operation, success or failure.",
                    "$ref": "#/definitions/apiStatusResult"
                }
            }
        },
        "apiStatusResult": {
            "description": "StatusResult contains possible statuses for a NIC.",
            "type": "object",
            "properties": {
                "Str": {
                    "type": "string"
                }
            }
        },
        "apiTimestamp": {
            "type": "object",
            "properties": {
                "nanos": {
                    "type": "integer",
                    "format": "int32"
                },
                "seconds": {
                    "type": "string",
                    "format": "int64"
                }
            }
        },
        "apiTypeMeta": {
            "description": "TypeMeta contains the metadata about kind and version for all API objects.",
            "type": "object",
            "properties": {
                "api-version": {
                    "description": "APIVersion defines the version of the API object. This can only be set by the server.",
                    "type": "string"
                },
                "kind": {
                    "description": "Kind represents the type of the API object.",
                    "type": "string"
                }
            }
        },
        "apiWatchControl": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int64"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "apiWatchEvent": {
            "type": "object",
            "properties": {
                "control": {
                    "$ref": "#/definitions/apiWatchControl"
                },
                "object": {
                    "$ref": "#/definitions/googleprotobufAny"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "apiWatchEventList": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apiWatchEvent"
                    }
                }
            }
        },
        "clusterIPConfig": {
            "description": "IPConfig defines the static IP configuration for a DistributedServiceCard.",
            "type": "object",
            "properties": {
                "default-gw": {
                    "description": "DefaultGW contains the default gateway's IP address. Should be a valid v4 or v6 IP address.",
                    "type": "string",
                    "example": "10.1.1.1, ff02::5 "
                },
                "dns-servers": {
                    "description": "DNSServers contains a list of DNS Servers that can be used on DistributedServiceCard.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ip-address": {
                    "description": "IPAddress contains the Management IP address of the DistributedServiceCard in CIDR format. Should be a valid v4 or v6 CIDR block.",
                    "type": "string",
                    "example": "10.1.1.1/24, ff02::5/32 "
                }
            }
        },
        "googleprotobufAny": {
            "description": "`Any` contains an arbitrary serialized protocol buffer message along with a URL that describes the type of the serialized message. Protobuf library provides support to pack/unpack Any values in the form of utility functions or additional generated methods of the Any type. Example 1: Pack and unpack a message in C++. Foo foo = ...; Any any; any.PackFrom(foo); ... if (any.UnpackTo(&foo)) { ... } Example 2: Pack and unpack a message in Java. Foo foo = ...; Any any = Any.pack(foo); ... if (any.is(Foo.class)) { foo = any.unpack(Foo.class); } Example 3: Pack and unpack a message in Python. foo = Foo(...) any = Any() any.Pack(foo) ... if any.Is(Foo.DESCRIPTOR): any.Unpack(foo) ... Example 4: Pack and unpack a message in Go foo := &pb.Foo{...} any, err := ptypes.MarshalAny(foo) ... foo := &pb.Foo{} if err := ptypes.UnmarshalAny(any, foo); err != nil { ... } The pack methods provided by protobuf library will by default use 'type.googleapis.com/full.type.name' as the type URL and the unpack methods only use the fully qualified type name after the last '/' in the type URL, for example \"foo.bar.com/x/y.z\" will yield type name \"y.z\". JSON ==== The JSON representation of an `Any` value uses the regular representation of the deserialized, embedded message, with an additional field `@type` which contains the type URL. Example: package google.profile; message Person { string first_name = 1; string last_name = 2; } { \"@type\": \"type.googleapis.com/google.profile.Person\", \"firstName\": <string>, \"lastName\": <string> } If the embedded message type is well-known and has a custom JSON representation, that representation will be embedded adding a field `value` which holds the custom JSON in addition to the `@type` field. Example (for message [google.protobuf.Duration][]): { \"@type\": \"type.googleapis.com/google.protobuf.Duration\", \"value\": \"1.212s\" }.",
            "type": "object",
            "properties": {
                "type_url": {
                    "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][] value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the URL, or have them precompiled into a binary to avoid any lookup. Therefore, binary compatibility needs to be preserved on changes to types. (Use versioned type names to manage breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.",
                    "type": "string"
                },
                "value": {
                    "description": "Must be a valid serialized protocol buffer of the above specified type.",
                    "type": "string",
                    "format": "byte"
                }
            }
        },
        "networkAutoMsgIPAMPolicyWatchHelper": {
            "description": "AutoMsgIPAMPolicyWatchHelper is a wrapper object for watch events for IPAMPolicy objects.",
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkAutoMsgIPAMPolicyWatchHelperWatchEvent"
                    }
                }
            }
        },
        "networkAutoMsgIPAMPolicyWatchHelperWatchEvent": {
            "type": "object",
            "properties": {
                "object": {
                    "$ref": "#/definitions/networkIPAMPolicy"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "networkAutoMsgLbPolicyWatchHelper": {
            "description": "AutoMsgLbPolicyWatchHelper is a wrapper object for watch events for LbPolicy objects.",
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkAutoMsgLbPolicyWatchHelperWatchEvent"
                    }
                }
            }
        },
        "networkAutoMsgLbPolicyWatchHelperWatchEvent": {
            "type": "object",
            "properties": {
                "object": {
                    "$ref": "#/definitions/networkLbPolicy"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "networkAutoMsgNetworkInterfaceWatchHelper": {
            "description": "AutoMsgNetworkInterfaceWatchHelper is a wrapper object for watch events for NetworkInterface objects.",
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkAutoMsgNetworkInterfaceWatchHelperWatchEvent"
                    }
                }
            }
        },
        "networkAutoMsgNetworkInterfaceWatchHelperWatchEvent": {
            "type": "object",
            "properties": {
                "object": {
                    "$ref": "#/definitions/networkNetworkInterface"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "networkAutoMsgNetworkWatchHelper": {
            "description": "AutoMsgNetworkWatchHelper is a wrapper object for watch events for Network objects.",
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkAutoMsgNetworkWatchHelperWatchEvent"
                    }
                }
            }
        },
        "networkAutoMsgNetworkWatchHelperWatchEvent": {
            "type": "object",
            "properties": {
                "object": {
                    "$ref": "#/definitions/networkNetwork"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "networkAutoMsgPolicerProfileWatchHelper": {
            "description": "AutoMsgPolicerProfileWatchHelper is a wrapper object for watch events for PolicerProfile objects.",
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkAutoMsgPolicerProfileWatchHelperWatchEvent"
                    }
                }
            }
        },
        "networkAutoMsgPolicerProfileWatchHelperWatchEvent": {
            "type": "object",
            "properties": {
                "object": {
                    "$ref": "#/definitions/networkPolicerProfile"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "networkAutoMsgRouteTableWatchHelper": {
            "description": "AutoMsgRouteTableWatchHelper is a wrapper object for watch events for RouteTable objects.",
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkAutoMsgRouteTableWatchHelperWatchEvent"
                    }
                }
            }
        },
        "networkAutoMsgRouteTableWatchHelperWatchEvent": {
            "type": "object",
            "properties": {
                "object": {
                    "$ref": "#/definitions/networkRouteTable"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "networkAutoMsgRoutingConfigWatchHelper": {
            "description": "AutoMsgRoutingConfigWatchHelper is a wrapper object for watch events for RoutingConfig objects.",
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkAutoMsgRoutingConfigWatchHelperWatchEvent"
                    }
                }
            }
        },
        "networkAutoMsgRoutingConfigWatchHelperWatchEvent": {
            "type": "object",
            "properties": {
                "object": {
                    "$ref": "#/definitions/networkRoutingConfig"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "networkAutoMsgServiceWatchHelper": {
            "description": "AutoMsgServiceWatchHelper is a wrapper object for watch events for Service objects.",
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkAutoMsgServiceWatchHelperWatchEvent"
                    }
                }
            }
        },
        "networkAutoMsgServiceWatchHelperWatchEvent": {
            "type": "object",
            "properties": {
                "object": {
                    "$ref": "#/definitions/networkService"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "networkAutoMsgVirtualRouterPeeringGroupWatchHelper": {
            "description": "AutoMsgVirtualRouterPeeringGroupWatchHelper is a wrapper object for watch events for VirtualRouterPeeringGroup objects.",
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkAutoMsgVirtualRouterPeeringGroupWatchHelperWatchEvent"
                    }
                }
            }
        },
        "networkAutoMsgVirtualRouterPeeringGroupWatchHelperWatchEvent": {
            "type": "object",
            "properties": {
                "object": {
                    "$ref": "#/definitions/networkVirtualRouterPeeringGroup"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "networkAutoMsgVirtualRouterWatchHelper": {
            "description": "AutoMsgVirtualRouterWatchHelper is a wrapper object for watch events for VirtualRouter objects.",
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkAutoMsgVirtualRouterWatchHelperWatchEvent"
                    }
                }
            }
        },
        "networkAutoMsgVirtualRouterWatchHelperWatchEvent": {
            "type": "object",
            "properties": {
                "object": {
                    "$ref": "#/definitions/networkVirtualRouter"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "networkBGPAuthStatus": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "ip-address": {
                    "description": "Neighbor IP Address.",
                    "type": "string"
                },
                "remote-as": {
                    "description": "ASN the neighbor belongs to.",
                    "$ref": "#/definitions/apiBgpAsn"
                },
                "status": {
                    "description": "Authentication status.",
                    "type": "string",
                    "default": "disabled",
                    "enum": [
                        "disabled",
                        "enabled"
                    ]
                }
            }
        },
        "networkBGPConfig": {
            "type": "object",
            "required": [
                "keepalive-interval",
                "holdtime"
            ],
            "properties": {
                "as-number": {
                    "description": "Local ASN for the BGP Instance.",
                    "$ref": "#/definitions/apiBgpAsn"
                },
                "dsc-auto-config": {
                    "description": "DSCAutoConfig sets the flag that this config is to be used as a template for auto configuration.",
                    "type": "boolean",
                    "format": "boolean"
                },
                "holdtime": {
                    "description": "Holdtime is time for which not receiving a keepalive message results in declaring the peer as dead. Value should be between 0 and 3600.",
                    "type": "integer",
                    "format": "int64",
                    "default": "180",
                    "maximum": 3600,
                    "minimum": 0
                },
                "keepalive-interval": {
                    "description": "KeepaliveInterval is time interval at which keepalive messages are sent. Value should be between 0 and 3600.",
                    "type": "integer",
                    "format": "int64",
                    "default": "60",
                    "maximum": 3600,
                    "minimum": 0
                },
                "neighbors": {
                    "description": "List of all neighbors.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkBGPNeighbor"
                    }
                },
                "router-id": {
                    "description": "Router ID for the BGP Instance. Should be a valid v4 or v6 IP address.",
                    "type": "string",
                    "example": "10.1.1.1, ff02::5 "
                },
                "suppress-default-resolution": {
                    "description": "SuppressDefaultResolution excludes default route from being used to resolve nexthop reachability in the underlay. WARNING: modifying this has network-wide data traffic impact as it temporarily deactivates and then re-activates all underlay and overlay routes on every node where this config is applied.",
                    "type": "boolean",
                    "format": "boolean"
                }
            }
        },
        "networkBGPNeighbor": {
            "type": "object",
            "required": [
                "multi-hop",
                "enable-address-families",
                "keepalive-interval",
                "holdtime",
                "allow-as-in"
            ],
            "properties": {
                "allow-as-in": {
                    "description": "AllowASIn allows local ASN to be in received routes. The value indicates how many instances are allowed. 0 disables the feature. Value should be between 0 and 255.",
                    "type": "integer",
                    "format": "int64",
                    "maximum": 255,
                    "minimum": 0
                },
                "dsc-auto-config": {
                    "description": "DSCAutoConfig sets the flag that this neighbor config is to be used as a template for auto configuration.",
                    "type": "boolean",
                    "format": "boolean"
                },
                "enable-address-families": {
                    "description": "Address families to enable on the neighbor.",
                    "type": "array",
                    "default": "ipv4-unicast",
                    "enum": [
                        "ipv4-unicast",
                        "l2vpn-evpn"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "holdtime": {
                    "description": "Holdtime is time for which not receiving a keepalive message results in declaring the peer as dead. Value should be between 0 and 3600.",
                    "type": "integer",
                    "format": "int64",
                    "maximum": 3600,
                    "minimum": 0
                },
                "ip-address": {
                    "description": "Neighbor IP Address. Should be a valid v4 or v6 IP address.",
                    "type": "string",
                    "example": "10.1.1.1, ff02::5 "
                },
                "keepalive-interval": {
                    "description": "KeepaliveInterval is time interval at which keepalive messages are sent. Value should be between 0 and 3600.",
                    "type": "integer",
                    "format": "int64",
                    "maximum": 3600,
                    "minimum": 0
                },
                "multi-hop": {
                    "description": "BGP Multihop configuration. Value should be between 1 and 255.",
                    "type": "integer",
                    "format": "int64",
                    "default": "64",
                    "maximum": 255,
                    "minimum": 1
                },
                "password": {
                    "description": "Enable Password authentication. Disabled if the string is empty. Length of string should be between 1 and 128.",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "remote-as": {
                    "description": "ASN the neighbor belongs to.",
                    "$ref": "#/definitions/apiBgpAsn"
                },
                "shutdown": {
                    "description": "Shutdown this neighbor session.",
                    "type": "boolean",
                    "format": "boolean"
                }
            }
        },
        "networkDHCPRelayPolicy": {
            "type": "object",
            "properties": {
                "relay-servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkDHCPServer"
                    }
                }
            }
        },
        "networkDHCPServer": {
            "description": "DHCPServer specifies details about each server.",
            "type": "object",
            "required": [
                "ip-address"
            ],
            "properties": {
                "ip-address": {
                    "description": "IP Address of the server. Should be a valid v4 or v6 IP address.",
                    "type": "string",
                    "example": "10.1.1.1, ff02::5 "
                },
                "virtual-router": {
                    "description": "Destination VRF where the server is connected. An empty value specifies that the server is reachable in the same vrf as the one where the policy is attached.",
                    "type": "string"
                }
            }
        },
        "networkHealthCheckSpec": {
            "type": "object",
            "properties": {
                "declare-healthy-count": {
                    "description": "# of successful probes before we declare the backend back up.",
                    "type": "integer",
                    "format": "int64"
                },
                "interval": {
                    "description": "Health check interval.",
                    "type": "integer",
                    "format": "int64"
                },
                "max-timeouts": {
                    "description": "timeout for declaring backend down.",
                    "type": "integer",
                    "format": "int64"
                },
                "probe-port-or-url": {
                    "description": "probe URL.",
                    "type": "string"
                },
                "probes-per-interval": {
                    "description": "# of probes per interval.",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "networkIPAMPolicy": {
            "type": "object",
            "properties": {
                "api-version": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/apiObjectMeta"
                },
                "spec": {
                    "description": "Spec contains the configuration for the IPAM service.",
                    "$ref": "#/definitions/networkIPAMPolicySpec"
                },
                "status": {
                    "description": "Status contains the current state of the IPAM service.",
                    "$ref": "#/definitions/networkIPAMPolicyStatus"
                }
            }
        },
        "networkIPAMPolicyList": {
            "description": "IPAMPolicyList is a container object for list of IPAMPolicy objects.",
            "type": "object",
            "properties": {
                "api-version": {
                    "type": "string"
                },
                "items": {
                    "description": "List of IPAMPolicy objects.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkIPAMPolicy"
                    }
                },
                "kind": {
                    "type": "string"
                },
                "list-meta": {
                    "$ref": "#/definitions/apiListMeta"
                }
            }
        },
        "networkIPAMPolicySpec": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "dhcp-relay": {
                    "$ref": "#/definitions/networkDHCPRelayPolicy"
                },
                "type": {
                    "type": "string",
                    "default": "dhcp-relay",
                    "enum": [
                        "dhcp-relay"
                    ]
                }
            }
        },
        "networkIPAMPolicyStatus": {
            "type": "object",
            "properties": {
                "propagation-status": {
                    "description": "The status of the configuration propagation to the Naples.",
                    "$ref": "#/definitions/securityPropagationStatus"
                }
            }
        },
        "networkLLDPNeighbor": {
            "type": "object",
            "properties": {
                "chassis-id": {
                    "description": "Chassis  ID.",
                    "type": "string"
                },
                "mgmt-address": {
                    "description": "Mgmt IP.",
                    "type": "string"
                },
                "port-description": {
                    "description": "Port Description.",
                    "type": "string"
                },
                "port-id": {
                    "description": "Port Name.",
                    "type": "string"
                },
                "sys-description": {
                    "description": "System Description.",
                    "type": "string"
                },
                "sys-name": {
                    "description": "System Name.",
                    "type": "string"
                }
            }
        },
        "networkLbPolicy": {
            "description": "LbPolicy represents a load balancer policy.",
            "type": "object",
            "properties": {
                "api-version": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/apiObjectMeta"
                },
                "spec": {
                    "description": "Spec contains the configuration of the LbPolicy.",
                    "$ref": "#/definitions/networkLbPolicySpec"
                },
                "status": {
                    "description": "Status contains the current state of the LbPolicy.",
                    "$ref": "#/definitions/networkLbPolicyStatus"
                }
            }
        },
        "networkLbPolicyList": {
            "description": "LbPolicyList is a container object for list of LbPolicy objects.",
            "type": "object",
            "properties": {
                "api-version": {
                    "type": "string"
                },
                "items": {
                    "description": "List of LbPolicy objects.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkLbPolicy"
                    }
                },
                "kind": {
                    "type": "string"
                },
                "list-meta": {
                    "$ref": "#/definitions/apiListMeta"
                }
            }
        },
        "networkLbPolicySpec": {
            "type": "object",
            "properties": {
                "algorithm": {
                    "description": "load balancing algorithm.",
                    "type": "string"
                },
                "health-check": {
                    "description": "health check policy.",
                    "$ref": "#/definitions/networkHealthCheckSpec"
                },
                "session-affinity": {
                    "description": "session affinity.",
                    "type": "string"
                },
                "type": {
                    "description": "load balancing type.",
                    "type": "string"
                }
            }
        },
        "networkLbPolicyStatus": {
            "type": "object",
            "properties": {
                "type": {
                    "description": "list of service objects referring this lb-policy.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "networkNetwork": {
            "description": "Network represents a subnet.",
            "type": "object",
            "properties": {
                "api-version": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/apiObjectMeta"
                },
                "spec": {
                    "description": "Spec contains the configuration of the network.",
                    "$ref": "#/definitions/networkNetworkSpec"
                },
                "status": {
                    "description": "Status contains the current state of the network.",
                    "$ref": "#/definitions/networkNetworkStatus"
                }
            }
        },
        "networkNetworkInterface": {
            "type": "object",
            "properties": {
                "api-version": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "meta": {
                    "description": "Object name is Serial-Number of the DSC.",
                    "$ref": "#/definitions/apiObjectMeta"
                },
                "spec": {
                    "description": "NetworkInterfaceSpec contains the configuration of the network adapter.",
                    "$ref": "#/definitions/networkNetworkInterfaceSpec"
                },
                "status": {
                    "description": "NetworkInterfaceStatus contains the current state of the network adapter.",
                    "$ref": "#/definitions/networkNetworkInterfaceStatus"
                }
            }
        },
        "networkNetworkInterfaceHostStatus": {
            "description": "NetworkInterfaceHostStatus is populated for PF and VF.",
            "type": "object",
            "properties": {
                "device-id": {
                    "description": "PCIE Device ID.",
                    "type": "string"
                },
                "host-ifname": {
                    "description": "interface name seen by the host driver.",
                    "type": "string"
                },
                "mac-address": {
                    "description": "mac address of the interface.",
                    "type": "string"
                }
            }
        },
        "networkNetworkInterfaceList": {
            "description": "NetworkInterfaceList is a container object for list of NetworkInterface objects.",
            "type": "object",
            "properties": {
                "api-version": {
                    "type": "string"
                },
                "items": {
                    "description": "List of NetworkInterface objects.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkNetworkInterface"
                    }
                },
                "kind": {
                    "type": "string"
                },
                "list-meta": {
                    "$ref": "#/definitions/apiListMeta"
                }
            }
        },
        "networkNetworkInterfaceSpec": {
            "description": "NetworkInterfaceSpec.",
            "type": "object",
            "required": [
                "admin-status",
                "type",
                "ip-alloc-type"
            ],
            "properties": {
                "admin-status": {
                    "description": "desired Admin state of the port.",
                    "type": "string",
                    "default": "up",
                    "enum": [
                        "up",
                        "down"
                    ]
                },
                "attach-network": {
                    "description": "AttachNetwork associates the interface with a Network. This is only valid for HOST_PF type.",
                    "type": "string"
                },
                "attach-tenant": {
                    "type": "string"
                },
                "connection-tracking": {
                    "description": "ConnectionTracking enables connection tracking on the interface. This is valid only for HOST_PF type.",
                    "type": "boolean",
                    "format": "boolean",
                    "default": "false"
                },
                "enable-fw-logging": {
                    "description": "EnableFwLogging enables flow logging on the interface. This is valid only for HOST_PF type.",
                    "type": "boolean",
                    "format": "boolean"
                },
                "ip-alloc-type": {
                    "type": "string",
                    "default": "none",
                    "enum": [
                        "none",
                        "static",
                        "dhcp"
                    ]
                },
                "ip-config": {
                    "description": "Interface IP Configuration if any.",
                    "$ref": "#/definitions/clusterIPConfig"
                },
                "mac-address": {
                    "description": "Override system allocated MAC address. Should be a valid MAC address.",
                    "type": "string",
                    "example": "aabb.ccdd.0000, aabb.ccdd.0000, aabb.ccdd.0000"
                },
                "mtu": {
                    "description": "Mtu of the interface.",
                    "type": "integer",
                    "format": "int64"
                },
                "pause": {
                    "description": "Pause Spec.",
                    "$ref": "#/definitions/networkPauseSpec"
                },
                "speed": {
                    "description": "Intefaae speed.",
                    "type": "string"
                },
                "tx-policer": {
                    "type": "string"
                },
                "type": {
                    "description": "Type specifies the type of interface.",
                    "type": "string",
                    "default": "none",
                    "enum": [
                        "none",
                        "host-pf",
                        "uplink-eth",
                        "uplink-mgmt",
                        "loopback-tep",
                        "host-vf"
                    ]
                },
                "vnf-attached": {
                    "description": "VNFAttached knob on the interface. This is valid only for HOST_PF type.",
                    "type": "boolean",
                    "format": "boolean"
                }
            }
        },
        "networkNetworkInterfaceStatus": {
            "description": "NetworkInterfaceStatus.",
            "type": "object",
            "required": [
                "type",
                "oper-status"
            ],
            "properties": {
                "cluster-node": {
                    "description": "Set only if interface is on Venice Node.",
                    "type": "string"
                },
                "dsc": {
                    "type": "string"
                },
                "dsc-id": {
                    "type": "string"
                },
                "if-host-status": {
                    "$ref": "#/definitions/networkNetworkInterfaceHostStatus"
                },
                "if-uplink-status": {
                    "$ref": "#/definitions/networkNetworkInterfaceUplinkStatus"
                },
                "mirror-sessions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "oper-status": {
                    "type": "string",
                    "default": "up",
                    "enum": [
                        "up",
                        "down"
                    ]
                },
                "primary-mac": {
                    "description": "Should be a valid MAC address.",
                    "type": "string",
                    "example": "aabb.ccdd.0000, aabb.ccdd.0000, aabb.ccdd.0000"
                },
                "propagation-status": {
                    "description": "The status of the configuration propagation to the Naples.",
                    "$ref": "#/definitions/securityPropagationStatus"
                },
                "type": {
                    "type": "string",
                    "default": "none",
                    "enum": [
                        "none",
                        "host-pf",
                        "uplink-eth",
                        "uplink-mgmt",
                        "loopback-tep",
                        "host-vf"
                    ]
                }
            }
        },
        "networkNetworkInterfaceUplinkStatus": {
            "type": "object",
            "properties": {
                "ip-config": {
                    "description": "Interface IP Configuration if any.",
                    "$ref": "#/definitions/clusterIPConfig"
                },
                "link-speed": {
                    "description": "LinkSpeed auto-negotiated.",
                    "type": "string"
                },
                "lldp-neighbor": {
                    "description": "LLDP neighbor.",
                    "$ref": "#/definitions/networkLLDPNeighbor"
                },
                "transceiver-status": {
                    "$ref": "#/definitions/networkTransceiverStatus"
                }
            }
        },
        "networkNetworkList": {
            "description": "NetworkList is a container object for list of Network objects.",
            "type": "object",
            "properties": {
                "api-version": {
                    "type": "string"
                },
                "items": {
                    "description": "List of Network objects.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkNetwork"
                    }
                },
                "kind": {
                    "type": "string"
                },
                "list-meta": {
                    "$ref": "#/definitions/apiListMeta"
                }
            }
        },
        "networkNetworkSpec": {
            "description": "spec part of network object.",
            "type": "object",
            "required": [
                "type",
                "vlan-id",
                "vxlan-vni"
            ],
            "properties": {
                "egress-security-policy": {
                    "description": "Security Policy to apply in the egress direction.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ingress-security-policy": {
                    "description": "Security Policy to apply in the ingress direction.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ipam-policy": {
                    "description": "Relay Configuration if any.",
                    "type": "string"
                },
                "ipv4-gateway": {
                    "description": "IPv4 gateway for this subnet. Should be a valid v4 or v6 IP address.",
                    "type": "string",
                    "example": "10.1.1.1, ff02::5 "
                },
                "ipv4-subnet": {
                    "description": "IPv4 subnet CIDR. Should be a valid v4 or v6 CIDR block.",
                    "type": "string",
                    "example": "10.1.1.1/24, ff02::5/32 "
                },
                "ipv6-gateway": {
                    "description": "IPv6 gateway.",
                    "type": "string"
                },
                "ipv6-subnet": {
                    "description": "IPv6 subnet CIDR.",
                    "type": "string"
                },
                "orchestrators": {
                    "description": "If supplied, this network will only be applied to the orchestrators specified.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkOrchestratorInfo"
                    }
                },
                "route-import-export": {
                    "description": "RouteImportExport specifies what routes will be imported to this Router and how routes are tagged when exported.",
                    "$ref": "#/definitions/networkRDSpec"
                },
                "type": {
                    "description": "type of network. (vlan/vxlan/routed etc).",
                    "type": "string",
                    "default": "bridged",
                    "enum": [
                        "bridged",
                        "routed"
                    ]
                },
                "virtual-router": {
                    "description": "VirtualRouter specifies the VRF this network belongs to.",
                    "type": "string"
                },
                "vlan-id": {
                    "description": "Vlan ID for the network. Value should be between 0 and 4095.",
                    "type": "integer",
                    "format": "int64",
                    "maximum": 4095,
                    "minimum": 0
                },
                "vxlan-vni": {
                    "description": "Vxlan VNI for the network. Value should be between 0 and 16777215.",
                    "type": "integer",
                    "format": "int64",
                    "maximum": 16777215,
                    "minimum": 0
                }
            }
        },
        "networkNetworkStatus": {
            "description": "status part of network object.",
            "type": "object",
            "properties": {
                "allocated-ipv4-addrs": {
                    "description": "allocated IPv4 addresses (bitmap).",
                    "type": "string",
                    "format": "byte"
                },
                "id": {
                    "description": "Handle is the internal Handle allocated to this network.",
                    "type": "string",
                    "format": "uint64"
                },
                "oper-state": {
                    "type": "string",
                    "default": "active",
                    "enum": [
                        "active",
                        "rejected"
                    ]
                },
                "propagation-status": {
                    "description": "The status of the configuration propagation to the Naples.",
                    "$ref": "#/definitions/securityPropagationStatus"
                },
                "workloads": {
                    "description": "list of all workloads in this network.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "networkOrchestratorInfo": {
            "type": "object",
            "required": [
                "orchestrator-name",
                "namespace"
            ],
            "properties": {
                "namespace": {
                    "description": "Namespace in the orchestrator in which this network should be created in. Length of string should be at least 1.",
                    "type": "string",
                    "minLength": 1
                },
                "orchestrator-name": {
                    "description": "Name of Orchestrator object to which this network should be applied to. Length of string should be at least 1.",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "networkPauseSpec": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "rx-pause-enabled": {
                    "description": "RX Pause enabled.",
                    "type": "boolean",
                    "format": "boolean"
                },
                "tx-pause-enabled": {
                    "description": "TX Pause enabled.",
                    "type": "boolean",
                    "format": "boolean"
                },
                "type": {
                    "description": "Pause type.",
                    "type": "string",
                    "default": "disable",
                    "enum": [
                        "disable",
                        "link",
                        "priority"
                    ]
                }
            }
        },
        "networkPolicerAction": {
            "type": "object",
            "required": [
                "policer-action"
            ],
            "properties": {
                "policer-action": {
                    "type": "string",
                    "default": "drop",
                    "enum": [
                        "drop"
                    ]
                }
            }
        },
        "networkPolicerCriteria": {
            "type": "object",
            "properties": {
                "burst-size": {
                    "description": "Burst size in number of packets/bytes as policer criteria.",
                    "type": "string",
                    "format": "uint64"
                },
                "bytes-per-second": {
                    "description": "Maximum permissible bytes per second before policer will start dropping traffic. Either BytesPerSecond/PacketsPerSecond can be specified.",
                    "type": "string",
                    "format": "uint64"
                },
                "packets-per-second": {
                    "description": "Maximum permissible packets per second before policer will start dropping traffic. Either BytesPerSecond/PacketsPerSecond can be specified.",
                    "type": "string",
                    "format": "uint64"
                }
            }
        },
        "networkPolicerProfile": {
            "description": "PolicerProfile.",
            "type": "object",
            "properties": {
                "api-version": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/apiObjectMeta"
                },
                "spec": {
                    "description": "Spec contains the configuration of the Traffic Policer.",
                    "$ref": "#/definitions/networkPolicerProfileSpec"
                },
                "status": {
                    "description": "Status contains the current state of the Traffic Policer.",
                    "$ref": "#/definitions/networkPolicerProfileStatus"
                }
            }
        },
        "networkPolicerProfileList": {
            "description": "PolicerProfileList is a container object for list of PolicerProfile objects.",
            "type": "object",
            "properties": {
                "api-version": {
                    "type": "string"
                },
                "items": {
                    "description": "List of PolicerProfile objects.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkPolicerProfile"
                    }
                },
                "kind": {
                    "type": "string"
                },
                "list-meta": {
                    "$ref": "#/definitions/apiListMeta"
                }
            }
        },
        "networkPolicerProfileSpec": {
            "type": "object",
            "properties": {
                "criteria": {
                    "description": "Traffic Policer Criteria.",
                    "$ref": "#/definitions/networkPolicerCriteria"
                },
                "exceed-action": {
                    "description": "Traffc Policer Action.",
                    "$ref": "#/definitions/networkPolicerAction"
                }
            }
        },
        "networkPolicerProfileStatus": {
            "type": "object",
            "properties": {
                "propagation-status": {
                    "description": "The status of the configuration propagation to the Naples.",
                    "$ref": "#/definitions/securityPropagationStatus"
                }
            }
        },
        "networkRDSpec": {
            "type": "object",
            "required": [
                "address-family"
            ],
            "properties": {
                "address-family": {
                    "description": "Address family where this config applies.",
                    "type": "string",
                    "default": "ipv4-unicast",
                    "enum": [
                        "ipv4-unicast",
                        "l2vpn-evpn"
                    ]
                },
                "rd": {
                    "description": "If Import and Export RDs are not specified, RD is used uniformly as RD, and import and export route-targets.",
                    "$ref": "#/definitions/networkRouteDistinguisher"
                },
                "rd-auto": {
                    "description": "True indicates the system will generate the RD automatically.",
                    "type": "boolean",
                    "format": "boolean"
                },
                "rt-export": {
                    "description": "Route Targets to Export.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkRouteDistinguisher"
                    }
                },
                "rt-import": {
                    "description": "Route Targets to Import.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkRouteDistinguisher"
                    }
                }
            }
        },
        "networkRoute": {
            "type": "object",
            "required": [
                "prefix",
                "next-hop"
            ],
            "properties": {
                "next-hop": {
                    "description": "NextHop for the route. Should be a valid v4 or v6 CIDR block.",
                    "type": "string",
                    "example": "10.1.1.1/24, ff02::5/32 "
                },
                "prefix": {
                    "description": "Route Prefix for the route. Should be a valid v4 or v6 CIDR block.",
                    "type": "string",
                    "example": "10.1.1.1/24, ff02::5/32 "
                },
                "target-virtual-router": {
                    "description": "Target VirtualRouter instance.",
                    "type": "string"
                }
            }
        },
        "networkRouteDistinguisher": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "admin-value": {
                    "description": "Administrator subfield of Value. Length depends on Type. swagger-tags: type=any."
                },
                "assigned-value": {
                    "description": "Assigned subfield of Value. Length depends on Type.",
                    "type": "integer",
                    "format": "int64"
                },
                "type": {
                    "description": "RD Type as in rfc4364.",
                    "type": "string",
                    "default": "type0",
                    "enum": [
                        "type0",
                        "type1",
                        "type2"
                    ]
                }
            }
        },
        "networkRouteTable": {
            "type": "object",
            "properties": {
                "api-version": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/apiObjectMeta"
                },
                "spec": {
                    "description": "Spec contains the configuration of the Route Table.",
                    "$ref": "#/definitions/networkRouteTableSpec"
                },
                "status": {
                    "description": "Status contains the current state of the Route Table.",
                    "$ref": "#/definitions/networkRouteTableStatus"
                }
            }
        },
        "networkRouteTableList": {
            "description": "RouteTableList is a container object for list of RouteTable objects.",
            "type": "object",
            "properties": {
                "api-version": {
                    "type": "string"
                },
                "items": {
                    "description": "List of RouteTable objects.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkRouteTable"
                    }
                },
                "kind": {
                    "type": "string"
                },
                "list-meta": {
                    "$ref": "#/definitions/apiListMeta"
                }
            }
        },
        "networkRouteTableSpec": {
            "type": "object"
        },
        "networkRouteTableStatus": {
            "type": "object",
            "properties": {
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkRoute"
                    }
                }
            }
        },
        "networkRoutingConfig": {
            "type": "object",
            "properties": {
                "api-version": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/apiObjectMeta"
                },
                "spec": {
                    "description": "Spec contains the configuration of the RoutingConfig.",
                    "$ref": "#/definitions/networkRoutingConfigSpec"
                },
                "status": {
                    "description": "Status contains the current state of the RoutingConfig.",
                    "$ref": "#/definitions/networkRoutingConfigStatus"
                }
            }
        },
        "networkRoutingConfigList": {
            "description": "RoutingConfigList is a container object for list of RoutingConfig objects.",
            "type": "object",
            "properties": {
                "api-version": {
                    "type": "string"
                },
                "items": {
                    "description": "List of RoutingConfig objects.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkRoutingConfig"
                    }
                },
                "kind": {
                    "type": "string"
                },
                "list-meta": {
                    "$ref": "#/definitions/apiListMeta"
                }
            }
        },
        "networkRoutingConfigSpec": {
            "type": "object",
            "properties": {
                "bgp-config": {
                    "description": "Configuration for the BGP instance.",
                    "$ref": "#/definitions/networkBGPConfig"
                }
            }
        },
        "networkRoutingConfigStatus": {
            "type": "object",
            "properties": {
                "auth-config-status": {
                    "description": "Authentication config status.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkBGPAuthStatus"
                    }
                },
                "propagation-status": {
                    "description": "The status of the configuration propagation to the Naples.",
                    "$ref": "#/definitions/securityPropagationStatus"
                }
            }
        },
        "networkService": {
            "description": "Service represents a group of identical endpoints, such as servers in an app tier.",
            "type": "object",
            "properties": {
                "api-version": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/apiObjectMeta"
                },
                "spec": {
                    "description": "Spec contains the configuration of the Service.",
                    "$ref": "#/definitions/networkServiceSpec"
                },
                "status": {
                    "description": "Status contains the current state of the Service.",
                    "$ref": "#/definitions/networkServiceStatus"
                }
            }
        },
        "networkServiceList": {
            "description": "ServiceList is a container object for list of Service objects.",
            "type": "object",
            "properties": {
                "api-version": {
                    "type": "string"
                },
                "items": {
                    "description": "List of Service objects.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkService"
                    }
                },
                "kind": {
                    "type": "string"
                },
                "list-meta": {
                    "$ref": "#/definitions/apiListMeta"
                }
            }
        },
        "networkServiceSpec": {
            "description": "spec part of service object.",
            "type": "object",
            "properties": {
                "lb-policy": {
                    "description": "load balancing policy (reference to LbPolicy object).",
                    "type": "string"
                },
                "ports": {
                    "description": "load balancer port.",
                    "type": "string"
                },
                "tls-client-policy": {
                    "description": "TLS configuration for outbound connections.",
                    "$ref": "#/definitions/networkTLSClientPolicySpec"
                },
                "tls-server-policy": {
                    "description": "TLS configuration for inbound connections.",
                    "$ref": "#/definitions/networkTLSServerPolicySpec"
                },
                "virtual-ip": {
                    "description": "Virtual IP of the load balancer.",
                    "type": "string"
                },
                "workload-labels": {
                    "description": "FIXME: maps are not working. change this after its fixed map<string, string> WorkloadSelector  = 1 [(gogoproto.nullable) = true, (gogoproto.jsontag) = \"workload-labels,omitempty\"]; workload selector for the service (list of labels to match).",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "networkServiceStatus": {
            "description": "status part of service object.",
            "type": "object",
            "properties": {
                "workloads": {
                    "description": "list of workloads that are backends of this service.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "networkTLSClientPolicySpec": {
            "description": "Service TLS configuration for connections initiated by the workload towards destinations inside or outside the cluster.",
            "type": "object",
            "properties": {
                "tls-client-allowed-peer-id": {
                    "description": "Valid DNS names or IP addresses that must appear in the server certificate SubjAltName or Common Name (if SAN is not specified). If not specified, client validates the IP address of the server.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tls-client-certificates-selector": {
                    "description": "A map containing the certificate to use for a set of destinations. The key is a selector for workloads that exist either inside or outside the cluster. It can be based on labels, hostnames or \"IP:port\" pairs. The value is the name of the certificate to use for the selected destinations. The certificates \"usage\" field must contain \"client\". TODO: replace the first \"string\" type with proper selector type when available. A single \"default\" certificate which matches all destinations is allowed. If a destination matches multiple non-default map keys, an error is returned. If a destination does not match any map key (and there is no default), the outbound connection is initiated without TLS.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tls-client-trust-roots": {
                    "description": "The list of root certificates used to validate a trust chain presented by a server. If the list is empty, all roots certificates in the tenant scope are considered.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "networkTLSServerPolicySpec": {
            "description": "The Service TLS configuration for inbound connections. It is used on all ports specified in the Service spec. Multiple Service objects can select the same workload and provide different server TLS configurations for disjoint sets of ports.",
            "type": "object",
            "required": [
                "client-authentication"
            ],
            "properties": {
                "client-authentication": {
                    "description": "Client authentication \"None\" means that server does not request and will not validate a client certificate. \"Mandatory\" means that server requests and validates client certificate. \"Optional\" means that server requests client certificate but proceeds even if client does not present it. Default is \"Mandatory\".",
                    "type": "string",
                    "default": "mandatory",
                    "enum": [
                        "mandatory",
                        "optional",
                        "none"
                    ]
                },
                "tls-server-allowed-peer-id": {
                    "description": "Valid DNS names or IP addresses that must appear in the client certificate SubjAltName or Common Name (if SAN is not specified). If client auth is enabled and AllowedPeerId is not specified, server accepts any client certificate as long as it is valid  (not expired and with a valid trust chain).",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tls-server-certificates": {
                    "description": "List of names of certificates to present to clients. The certificates \"usage\" field must contain \"server\". If multiple certificates names are provided, system tries to choose the correct one using SNI, otherwise it picks the first one in the list.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tls-server-trust-roots": {
                    "description": "The list of root certificates used to validate a trust chain presented by client. If the list is empty, all roots certificates in the tenant scope are considered.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "networkTransceiverStatus": {
            "type": "object",
            "required": [
                "state",
                "cable-type",
                "pid"
            ],
            "properties": {
                "cable-type": {
                    "type": "string",
                    "default": "none",
                    "enum": [
                        "none",
                        "copper",
                        "fiber"
                    ]
                },
                "pid": {
                    "type": "string",
                    "default": "unknown",
                    "enum": [
                        "unknown",
                        "qsfp_100g_cr4",
                        "qsfp_40gbase_cr4",
                        "sfp_25gbase_cr_s",
                        "sfp_25gbase_cr_l",
                        "sfp_25gbase_cr_n",
                        "qsfp_100g_aoc",
                        "qsfp_100g_acc",
                        "qsfp_100g_sr4",
                        "qsfp_100g_lr4",
                        "qsfp_100g_er4",
                        "qsfp_40gbase_er4",
                        "qsfp_40gbase_sr4",
                        "qsfp_40gbase_lr4",
                        "qsfp_40gbase_aoc",
                        "sfp_25gbase_sr",
                        "sfp_25gbase_lr",
                        "sfp_25gbase_er",
                        "sfp_25gbase_aoc",
                        "sfp_10gbase_sr",
                        "sfp_10gbase_lr",
                        "sfp_10gbase_lrm",
                        "sfp_10gbase_er",
                        "sfp_10gbase_aoc",
                        "sfp_10gbase_cu",
                        "qsfp_100g_cwdm4",
                        "qsfp_100g_psm4",
                        "pid_na"
                    ]
                },
                "state": {
                    "type": "string",
                    "default": "state_na",
                    "enum": [
                        "state_na",
                        "state_removed",
                        "state_inserted",
                        "state_pending",
                        "state_sprom_read",
                        "state_sprom_read_err"
                    ]
                }
            }
        },
        "networkVirtualRouter": {
            "description": "VirtualRouter - represents a forwarding instance. Could be multiple per tenant.",
            "type": "object",
            "properties": {
                "api-version": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/apiObjectMeta"
                },
                "spec": {
                    "$ref": "#/definitions/networkVirtualRouterSpec"
                },
                "status": {
                    "$ref": "#/definitions/networkVirtualRouterStatus"
                }
            }
        },
        "networkVirtualRouterList": {
            "description": "VirtualRouterList is a container object for list of VirtualRouter objects.",
            "type": "object",
            "properties": {
                "api-version": {
                    "type": "string"
                },
                "items": {
                    "description": "List of VirtualRouter objects.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkVirtualRouter"
                    }
                },
                "kind": {
                    "type": "string"
                },
                "list-meta": {
                    "$ref": "#/definitions/apiListMeta"
                }
            }
        },
        "networkVirtualRouterPeeringGroup": {
            "type": "object",
            "properties": {
                "api-version": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/apiObjectMeta"
                },
                "spec": {
                    "$ref": "#/definitions/networkVirtualRouterPeeringGroupSpec"
                },
                "status": {
                    "$ref": "#/definitions/networkVirtualRouterPeeringGroupStatus"
                }
            }
        },
        "networkVirtualRouterPeeringGroupList": {
            "description": "VirtualRouterPeeringGroupList is a container object for list of VirtualRouterPeeringGroup objects.",
            "type": "object",
            "properties": {
                "api-version": {
                    "type": "string"
                },
                "items": {
                    "description": "List of VirtualRouterPeeringGroup objects.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkVirtualRouterPeeringGroup"
                    }
                },
                "kind": {
                    "type": "string"
                },
                "list-meta": {
                    "$ref": "#/definitions/apiListMeta"
                }
            }
        },
        "networkVirtualRouterPeeringGroupSpec": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkVirtualRouterPeeringSpec"
                    }
                }
            }
        },
        "networkVirtualRouterPeeringGroupStatus": {
            "type": "object",
            "properties": {
                "propagation-status": {
                    "description": "The status of the configuration propagation to the DSC.",
                    "$ref": "#/definitions/securityPropagationStatus"
                },
                "route-tables": {
                    "description": "VirtualRouter -> Route table derived from the prefixes exposed by other VirtualRouters in this peering group.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/networkVirtualRouterPeeringRouteTable"
                    }
                }
            }
        },
        "networkVirtualRouterPeeringRoute": {
            "type": "object",
            "required": [
                "ipv4-prefix"
            ],
            "properties": {
                "dest-virtual-router": {
                    "description": "Destination VirtualRouter this prefix is reachable on.",
                    "type": "string"
                },
                "ipv4-prefix": {
                    "description": "Should be a valid v4 or v6 CIDR block.",
                    "type": "string",
                    "example": "10.1.1.1/24, ff02::5/32 "
                }
            }
        },
        "networkVirtualRouterPeeringRouteTable": {
            "type": "object",
            "properties": {
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkVirtualRouterPeeringRoute"
                    }
                }
            }
        },
        "networkVirtualRouterPeeringSpec": {
            "type": "object",
            "required": [
                "ipv4-prefixes"
            ],
            "properties": {
                "ipv4-prefixes": {
                    "description": "List of destination prefixes located in this Virtual Router exposed as reachable from any other Virtual Router participating in this peering group. Should be a valid v4 or v6 CIDR block.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "10.1.1.1/24, ff02::5/32 "
                },
                "virtual-router": {
                    "type": "string"
                }
            }
        },
        "networkVirtualRouterSpec": {
            "type": "object",
            "required": [
                "type",
                "vxlan-vni"
            ],
            "properties": {
                "default-ipam-policy": {
                    "description": "Default IPAM policy for networks belonging to this Virtual Router. Any IPAM Policy specified in the Network overrides this.",
                    "type": "string"
                },
                "route-import-export": {
                    "description": "RouteImportExport specifies what routes will be imported to this Router and how routes are tagged when exported.",
                    "$ref": "#/definitions/networkRDSpec"
                },
                "router-mac-address": {
                    "description": "Default Router MAC Address to use for this Virtual Router. Should be a valid MAC address.",
                    "type": "string",
                    "example": "aabb.ccdd.0000, aabb.ccdd.0000, aabb.ccdd.0000"
                },
                "type": {
                    "type": "string",
                    "default": "unknown",
                    "enum": [
                        "unknown",
                        "tenant",
                        "infra"
                    ]
                },
                "vxlan-vni": {
                    "description": "VxlAN VNI for the Virtual Router. Value should be between 0 and 16777215.",
                    "type": "integer",
                    "format": "int64",
                    "maximum": 16777215,
                    "minimum": 0
                }
            }
        },
        "networkVirtualRouterStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Handle allocated in the system.",
                    "type": "string",
                    "format": "uint64"
                },
                "propagation-status": {
                    "description": "The status of the configuration propagation to the Naples.",
                    "$ref": "#/definitions/securityPropagationStatus"
                },
                "rd": {
                    "$ref": "#/definitions/networkRouteDistinguisher"
                },
                "route-table": {
                    "type": "string"
                }
            }
        },
        "securityDSCStatus": {
            "type": "object",
            "properties": {
                "dsc-id": {
                    "description": "DSC ID for which the agent error or warning is issued.",
                    "type": "string"
                },
                "dsc-info-status": {
                    "description": "InfoStatus contains agent message the operation is failed or warning is issued.",
                    "type": "string"
                }
            }
        },
        "securityPropagationStatus": {
            "type": "object",
            "properties": {
                "dsc-status": {
                    "description": "list of DSCs status.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/securityDSCStatus"
                    }
                },
                "generation-id": {
                    "description": "The Generation ID this status is for.",
                    "type": "string"
                },
                "min-version": {
                    "description": "The Version running on the slowest Naples.",
                    "type": "string"
                },
                "pending": {
                    "description": "Number of Naples pending. If this is 0 it can be assumed that everything is up to date.",
                    "type": "integer",
                    "format": "int32"
                },
                "pending-dscs": {
                    "description": "list of DSCs where propagation did not complete.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "description": "Textual description of propagation status.",
                    "type": "string"
                },
                "updated": {
                    "description": "The number of Naples that this version has already been pushed to.",
                    "type": "integer",
                    "format": "int32"
                }
            }
        }
    }
}